#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cnCentroMedico
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Proyecto")]
	public partial class dcCentroMedico : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCITA(enCentroMedico.CITA instance);
    partial void UpdateCITA(enCentroMedico.CITA instance);
    partial void DeleteCITA(enCentroMedico.CITA instance);
    partial void InsertORDENINTERNAMIENTO(enCentroMedico.ORDENINTERNAMIENTO instance);
    partial void UpdateORDENINTERNAMIENTO(enCentroMedico.ORDENINTERNAMIENTO instance);
    partial void DeleteORDENINTERNAMIENTO(enCentroMedico.ORDENINTERNAMIENTO instance);
    partial void InsertREFERENCIA(enCentroMedico.REFERENCIA instance);
    partial void UpdateREFERENCIA(enCentroMedico.REFERENCIA instance);
    partial void DeleteREFERENCIA(enCentroMedico.REFERENCIA instance);
    partial void InsertSEGUIMIENTO(enCentroMedico.SEGUIMIENTO instance);
    partial void UpdateSEGUIMIENTO(enCentroMedico.SEGUIMIENTO instance);
    partial void DeleteSEGUIMIENTO(enCentroMedico.SEGUIMIENTO instance);
    partial void InsertEMPLEADO(enCentroMedico.EMPLEADO instance);
    partial void UpdateEMPLEADO(enCentroMedico.EMPLEADO instance);
    partial void DeleteEMPLEADO(enCentroMedico.EMPLEADO instance);
    partial void InsertEMPLEADOSEDE(enCentroMedico.EMPLEADOSEDE instance);
    partial void UpdateEMPLEADOSEDE(enCentroMedico.EMPLEADOSEDE instance);
    partial void DeleteEMPLEADOSEDE(enCentroMedico.EMPLEADOSEDE instance);
    partial void InsertENCARGADOFARMACIA(enCentroMedico.ENCARGADOFARMACIA instance);
    partial void UpdateENCARGADOFARMACIA(enCentroMedico.ENCARGADOFARMACIA instance);
    partial void DeleteENCARGADOFARMACIA(enCentroMedico.ENCARGADOFARMACIA instance);
    partial void InsertENCARGADOLAB(enCentroMedico.ENCARGADOLAB instance);
    partial void UpdateENCARGADOLAB(enCentroMedico.ENCARGADOLAB instance);
    partial void DeleteENCARGADOLAB(enCentroMedico.ENCARGADOLAB instance);
    partial void InsertESPECIALIDAD(enCentroMedico.ESPECIALIDAD instance);
    partial void UpdateESPECIALIDAD(enCentroMedico.ESPECIALIDAD instance);
    partial void DeleteESPECIALIDAD(enCentroMedico.ESPECIALIDAD instance);
    partial void InsertHORARIO(enCentroMedico.HORARIO instance);
    partial void UpdateHORARIO(enCentroMedico.HORARIO instance);
    partial void DeleteHORARIO(enCentroMedico.HORARIO instance);
    partial void InsertMEDICOESPECIALIDAD(enCentroMedico.MEDICOESPECIALIDAD instance);
    partial void UpdateMEDICOESPECIALIDAD(enCentroMedico.MEDICOESPECIALIDAD instance);
    partial void DeleteMEDICOESPECIALIDAD(enCentroMedico.MEDICOESPECIALIDAD instance);
    partial void InsertSEDE(enCentroMedico.SEDE instance);
    partial void UpdateSEDE(enCentroMedico.SEDE instance);
    partial void DeleteSEDE(enCentroMedico.SEDE instance);
    partial void InsertCENTRO(enCentroMedico.CENTRO instance);
    partial void UpdateCENTRO(enCentroMedico.CENTRO instance);
    partial void DeleteCENTRO(enCentroMedico.CENTRO instance);
    partial void InsertRECETA(enCentroMedico.RECETA instance);
    partial void UpdateRECETA(enCentroMedico.RECETA instance);
    partial void DeleteRECETA(enCentroMedico.RECETA instance);
    partial void InsertVALORACIONEMERGENCIA(enCentroMedico.VALORACIONEMERGENCIA instance);
    partial void UpdateVALORACIONEMERGENCIA(enCentroMedico.VALORACIONEMERGENCIA instance);
    partial void DeleteVALORACIONEMERGENCIA(enCentroMedico.VALORACIONEMERGENCIA instance);
    partial void InsertLINEARECETA(enCentroMedico.LINEARECETA instance);
    partial void UpdateLINEARECETA(enCentroMedico.LINEARECETA instance);
    partial void DeleteLINEARECETA(enCentroMedico.LINEARECETA instance);
    partial void InsertSIGNOVITALVALORACION(enCentroMedico.SIGNOVITALVALORACION instance);
    partial void UpdateSIGNOVITALVALORACION(enCentroMedico.SIGNOVITALVALORACION instance);
    partial void DeleteSIGNOVITALVALORACION(enCentroMedico.SIGNOVITALVALORACION instance);
    partial void InsertPACIENTETELEFONO(enCentroMedico.PACIENTETELEFONO instance);
    partial void UpdatePACIENTETELEFONO(enCentroMedico.PACIENTETELEFONO instance);
    partial void DeletePACIENTETELEFONO(enCentroMedico.PACIENTETELEFONO instance);
    partial void InsertPACIENTE(enCentroMedico.PACIENTE instance);
    partial void UpdatePACIENTE(enCentroMedico.PACIENTE instance);
    partial void DeletePACIENTE(enCentroMedico.PACIENTE instance);
    partial void InsertCONTACTORESPONSABLE(enCentroMedico.CONTACTORESPONSABLE instance);
    partial void UpdateCONTACTORESPONSABLE(enCentroMedico.CONTACTORESPONSABLE instance);
    partial void DeleteCONTACTORESPONSABLE(enCentroMedico.CONTACTORESPONSABLE instance);
    partial void InsertANTECEDENTEPACIENTE(enCentroMedico.ANTECEDENTEPACIENTE instance);
    partial void UpdateANTECEDENTEPACIENTE(enCentroMedico.ANTECEDENTEPACIENTE instance);
    partial void DeleteANTECEDENTEPACIENTE(enCentroMedico.ANTECEDENTEPACIENTE instance);
    partial void InsertANTECEDENTE(enCentroMedico.ANTECEDENTE instance);
    partial void UpdateANTECEDENTE(enCentroMedico.ANTECEDENTE instance);
    partial void DeleteANTECEDENTE(enCentroMedico.ANTECEDENTE instance);
    partial void InsertTIPOLABORATORIO(enCentroMedico.TIPOLABORATORIO instance);
    partial void UpdateTIPOLABORATORIO(enCentroMedico.TIPOLABORATORIO instance);
    partial void DeleteTIPOLABORATORIO(enCentroMedico.TIPOLABORATORIO instance);
    partial void InsertSOLICITUDEXAMEN(enCentroMedico.SOLICITUDEXAMEN instance);
    partial void UpdateSOLICITUDEXAMEN(enCentroMedico.SOLICITUDEXAMEN instance);
    partial void DeleteSOLICITUDEXAMEN(enCentroMedico.SOLICITUDEXAMEN instance);
    partial void InsertLABORATORIO(enCentroMedico.LABORATORIO instance);
    partial void UpdateLABORATORIO(enCentroMedico.LABORATORIO instance);
    partial void DeleteLABORATORIO(enCentroMedico.LABORATORIO instance);
    partial void InsertITEMSOLICITUD(enCentroMedico.ITEMSOLICITUD instance);
    partial void UpdateITEMSOLICITUD(enCentroMedico.ITEMSOLICITUD instance);
    partial void DeleteITEMSOLICITUD(enCentroMedico.ITEMSOLICITUD instance);
    partial void InsertITEM(enCentroMedico.ITEM instance);
    partial void UpdateITEM(enCentroMedico.ITEM instance);
    partial void DeleteITEM(enCentroMedico.ITEM instance);
    partial void InsertEXAMENLABORATORIO(enCentroMedico.EXAMENLABORATORIO instance);
    partial void UpdateEXAMENLABORATORIO(enCentroMedico.EXAMENLABORATORIO instance);
    partial void DeleteEXAMENLABORATORIO(enCentroMedico.EXAMENLABORATORIO instance);
    partial void InsertEXAMEN(enCentroMedico.EXAMEN instance);
    partial void UpdateEXAMEN(enCentroMedico.EXAMEN instance);
    partial void DeleteEXAMEN(enCentroMedico.EXAMEN instance);
    partial void InsertMEDICAMENTOFARMACIA(enCentroMedico.MEDICAMENTOFARMACIA instance);
    partial void UpdateMEDICAMENTOFARMACIA(enCentroMedico.MEDICAMENTOFARMACIA instance);
    partial void DeleteMEDICAMENTOFARMACIA(enCentroMedico.MEDICAMENTOFARMACIA instance);
    partial void InsertMEDICAMENTO(enCentroMedico.MEDICAMENTO instance);
    partial void UpdateMEDICAMENTO(enCentroMedico.MEDICAMENTO instance);
    partial void DeleteMEDICAMENTO(enCentroMedico.MEDICAMENTO instance);
    partial void InsertFARMACIA(enCentroMedico.FARMACIA instance);
    partial void UpdateFARMACIA(enCentroMedico.FARMACIA instance);
    partial void DeleteFARMACIA(enCentroMedico.FARMACIA instance);
    partial void InsertFACTURA(enCentroMedico.FACTURA instance);
    partial void UpdateFACTURA(enCentroMedico.FACTURA instance);
    partial void DeleteFACTURA(enCentroMedico.FACTURA instance);
    partial void InsertPUESTO(enCentroMedico.PUESTO instance);
    partial void UpdatePUESTO(enCentroMedico.PUESTO instance);
    partial void DeletePUESTO(enCentroMedico.PUESTO instance);
    #endregion
		
		public dcCentroMedico() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProyectoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dcCentroMedico(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCentroMedico(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCentroMedico(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcCentroMedico(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<enCentroMedico.CITA> CITAs
		{
			get
			{
				return this.GetTable<enCentroMedico.CITA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ORDENINTERNAMIENTO> ORDENINTERNAMIENTOs
		{
			get
			{
				return this.GetTable<enCentroMedico.ORDENINTERNAMIENTO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.REFERENCIA> REFERENCIAs
		{
			get
			{
				return this.GetTable<enCentroMedico.REFERENCIA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.SEGUIMIENTO> SEGUIMIENTOs
		{
			get
			{
				return this.GetTable<enCentroMedico.SEGUIMIENTO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.EMPLEADO> EMPLEADOs
		{
			get
			{
				return this.GetTable<enCentroMedico.EMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.EMPLEADOSEDE> EMPLEADOSEDEs
		{
			get
			{
				return this.GetTable<enCentroMedico.EMPLEADOSEDE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ENCARGADOFARMACIA> ENCARGADOFARMACIAs
		{
			get
			{
				return this.GetTable<enCentroMedico.ENCARGADOFARMACIA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ENCARGADOLAB> ENCARGADOLABs
		{
			get
			{
				return this.GetTable<enCentroMedico.ENCARGADOLAB>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ESPECIALIDAD> ESPECIALIDADs
		{
			get
			{
				return this.GetTable<enCentroMedico.ESPECIALIDAD>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.HORARIO> HORARIOs
		{
			get
			{
				return this.GetTable<enCentroMedico.HORARIO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.MEDICOESPECIALIDAD> MEDICOESPECIALIDADs
		{
			get
			{
				return this.GetTable<enCentroMedico.MEDICOESPECIALIDAD>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.SEDE> SEDEs
		{
			get
			{
				return this.GetTable<enCentroMedico.SEDE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.CENTRO> CENTROs
		{
			get
			{
				return this.GetTable<enCentroMedico.CENTRO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.RECETA> RECETAs
		{
			get
			{
				return this.GetTable<enCentroMedico.RECETA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.VALORACIONEMERGENCIA> VALORACIONEMERGENCIAs
		{
			get
			{
				return this.GetTable<enCentroMedico.VALORACIONEMERGENCIA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.LINEARECETA> LINEARECETAs
		{
			get
			{
				return this.GetTable<enCentroMedico.LINEARECETA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.SIGNOVITALVALORACION> SIGNOVITALVALORACIONs
		{
			get
			{
				return this.GetTable<enCentroMedico.SIGNOVITALVALORACION>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.PACIENTETELEFONO> PACIENTETELEFONOs
		{
			get
			{
				return this.GetTable<enCentroMedico.PACIENTETELEFONO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.PACIENTE> PACIENTEs
		{
			get
			{
				return this.GetTable<enCentroMedico.PACIENTE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.CONTACTORESPONSABLE> CONTACTORESPONSABLEs
		{
			get
			{
				return this.GetTable<enCentroMedico.CONTACTORESPONSABLE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ANTECEDENTEPACIENTE> ANTECEDENTEPACIENTEs
		{
			get
			{
				return this.GetTable<enCentroMedico.ANTECEDENTEPACIENTE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ANTECEDENTE> ANTECEDENTEs
		{
			get
			{
				return this.GetTable<enCentroMedico.ANTECEDENTE>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.TIPOLABORATORIO> TIPOLABORATORIOs
		{
			get
			{
				return this.GetTable<enCentroMedico.TIPOLABORATORIO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.SOLICITUDEXAMEN> SOLICITUDEXAMENs
		{
			get
			{
				return this.GetTable<enCentroMedico.SOLICITUDEXAMEN>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.LABORATORIO> LABORATORIOs
		{
			get
			{
				return this.GetTable<enCentroMedico.LABORATORIO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ITEMSOLICITUD> ITEMSOLICITUDs
		{
			get
			{
				return this.GetTable<enCentroMedico.ITEMSOLICITUD>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.ITEM> ITEMs
		{
			get
			{
				return this.GetTable<enCentroMedico.ITEM>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.EXAMENLABORATORIO> EXAMENLABORATORIOs
		{
			get
			{
				return this.GetTable<enCentroMedico.EXAMENLABORATORIO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.EXAMEN> EXAMENs
		{
			get
			{
				return this.GetTable<enCentroMedico.EXAMEN>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.MEDICAMENTOFARMACIA> MEDICAMENTOFARMACIAs
		{
			get
			{
				return this.GetTable<enCentroMedico.MEDICAMENTOFARMACIA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.MEDICAMENTO> MEDICAMENTOs
		{
			get
			{
				return this.GetTable<enCentroMedico.MEDICAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.FARMACIA> FARMACIAs
		{
			get
			{
				return this.GetTable<enCentroMedico.FARMACIA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.FACTURA> FACTURAs
		{
			get
			{
				return this.GetTable<enCentroMedico.FACTURA>();
			}
		}
		
		public System.Data.Linq.Table<enCentroMedico.PUESTO> PUESTOs
		{
			get
			{
				return this.GetTable<enCentroMedico.PUESTO>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="PACIENTE.obtenerCedulaNombrePacientes")]
		public ISingleResult<enCentroMedico.obtenerCedulaNombrePacientesResult> obtenerCedulaNombrePacientes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<enCentroMedico.obtenerCedulaNombrePacientesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="EMPLEADO.obtenerMedicosEspecialiad")]
		public ISingleResult<enCentroMedico.obtenerMedicosEspecialiadResult> obtenerMedicosEspecialiad([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sede", DbType="Int")] System.Nullable<int> sede)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sede);
			return ((ISingleResult<enCentroMedico.obtenerMedicosEspecialiadResult>)(result.ReturnValue));
		}
	}
}
namespace enCentroMedico
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CITA.CITA")]
	public partial class CITA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDCITA;
		
		private decimal _SEDE;
		
		private decimal _MEDICO;
		
		private decimal _ESPECIALIDAD;
		
		private string _CEDULAPACIENTE;
		
		private char _DIACITA;
		
		private decimal _HORACITA;
		
		private System.DateTime _FECHACITA;
		
		private string _OBSERVACIONES;
		
		private char _ESTADO;
		
		private System.Nullable<decimal> _IDFACTURA;
		
		private EntitySet<ORDENINTERNAMIENTO> _ORDENINTERNAMIENTOs;
		
		private EntitySet<REFERENCIA> _REFERENCIAs;
		
		private EntitySet<SEGUIMIENTO> _SEGUIMIENTOs;
		
		private EntitySet<SEGUIMIENTO> _SEGUIMIENTOs1;
		
		private EntitySet<RECETA> _RECETAs;
		
		private EntitySet<SOLICITUDEXAMEN> _SOLICITUDEXAMENs;
		
		private EntityRef<HORARIO> _HORARIO;
		
		private EntityRef<MEDICOESPECIALIDAD> _MEDICOESPECIALIDAD;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
		private EntityRef<FACTURA> _FACTURA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnSEDEChanging(decimal value);
    partial void OnSEDEChanged();
    partial void OnMEDICOChanging(decimal value);
    partial void OnMEDICOChanged();
    partial void OnESPECIALIDADChanging(decimal value);
    partial void OnESPECIALIDADChanged();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    partial void OnDIACITAChanging(char value);
    partial void OnDIACITAChanged();
    partial void OnHORACITAChanging(decimal value);
    partial void OnHORACITAChanged();
    partial void OnFECHACITAChanging(System.DateTime value);
    partial void OnFECHACITAChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    partial void OnESTADOChanging(char value);
    partial void OnESTADOChanged();
    partial void OnIDFACTURAChanging(System.Nullable<decimal> value);
    partial void OnIDFACTURAChanged();
    #endregion
		
		public CITA()
		{
			this._ORDENINTERNAMIENTOs = new EntitySet<ORDENINTERNAMIENTO>(new Action<ORDENINTERNAMIENTO>(this.attach_ORDENINTERNAMIENTOs), new Action<ORDENINTERNAMIENTO>(this.detach_ORDENINTERNAMIENTOs));
			this._REFERENCIAs = new EntitySet<REFERENCIA>(new Action<REFERENCIA>(this.attach_REFERENCIAs), new Action<REFERENCIA>(this.detach_REFERENCIAs));
			this._SEGUIMIENTOs = new EntitySet<SEGUIMIENTO>(new Action<SEGUIMIENTO>(this.attach_SEGUIMIENTOs), new Action<SEGUIMIENTO>(this.detach_SEGUIMIENTOs));
			this._SEGUIMIENTOs1 = new EntitySet<SEGUIMIENTO>(new Action<SEGUIMIENTO>(this.attach_SEGUIMIENTOs1), new Action<SEGUIMIENTO>(this.detach_SEGUIMIENTOs1));
			this._RECETAs = new EntitySet<RECETA>(new Action<RECETA>(this.attach_RECETAs), new Action<RECETA>(this.detach_RECETAs));
			this._SOLICITUDEXAMENs = new EntitySet<SOLICITUDEXAMEN>(new Action<SOLICITUDEXAMEN>(this.attach_SOLICITUDEXAMENs), new Action<SOLICITUDEXAMEN>(this.detach_SOLICITUDEXAMENs));
			this._HORARIO = default(EntityRef<HORARIO>);
			this._MEDICOESPECIALIDAD = default(EntityRef<MEDICOESPECIALIDAD>);
			this._PACIENTE = default(EntityRef<PACIENTE>);
			this._FACTURA = default(EntityRef<FACTURA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEDE", DbType="Decimal(4,0) NOT NULL")]
		public decimal SEDE
		{
			get
			{
				return this._SEDE;
			}
			set
			{
				if ((this._SEDE != value))
				{
					if ((this._HORARIO.HasLoadedOrAssignedValue || this._MEDICOESPECIALIDAD.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSEDEChanging(value);
					this.SendPropertyChanging();
					this._SEDE = value;
					this.SendPropertyChanged("SEDE");
					this.OnSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDICO", DbType="Decimal(9,0) NOT NULL")]
		public decimal MEDICO
		{
			get
			{
				return this._MEDICO;
			}
			set
			{
				if ((this._MEDICO != value))
				{
					if ((this._HORARIO.HasLoadedOrAssignedValue || this._MEDICOESPECIALIDAD.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEDICOChanging(value);
					this.SendPropertyChanging();
					this._MEDICO = value;
					this.SendPropertyChanged("MEDICO");
					this.OnMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESPECIALIDAD", DbType="Decimal(9,0) NOT NULL")]
		public decimal ESPECIALIDAD
		{
			get
			{
				return this._ESPECIALIDAD;
			}
			set
			{
				if ((this._ESPECIALIDAD != value))
				{
					if (this._MEDICOESPECIALIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._ESPECIALIDAD = value;
					this.SendPropertyChanged("ESPECIALIDAD");
					this.OnESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACITA", DbType="Char(1) NOT NULL")]
		public char DIACITA
		{
			get
			{
				return this._DIACITA;
			}
			set
			{
				if ((this._DIACITA != value))
				{
					if (this._HORARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDIACITAChanging(value);
					this.SendPropertyChanging();
					this._DIACITA = value;
					this.SendPropertyChanged("DIACITA");
					this.OnDIACITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORACITA", DbType="Decimal(2,0) NOT NULL")]
		public decimal HORACITA
		{
			get
			{
				return this._HORACITA;
			}
			set
			{
				if ((this._HORACITA != value))
				{
					if (this._HORARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHORACITAChanging(value);
					this.SendPropertyChanging();
					this._HORACITA = value;
					this.SendPropertyChanged("HORACITA");
					this.OnHORACITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHACITA", DbType="Date NOT NULL")]
		public System.DateTime FECHACITA
		{
			get
			{
				return this._FECHACITA;
			}
			set
			{
				if ((this._FECHACITA != value))
				{
					this.OnFECHACITAChanging(value);
					this.SendPropertyChanging();
					this._FECHACITA = value;
					this.SendPropertyChanged("FECHACITA");
					this.OnFECHACITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO", DbType="Char(1) NOT NULL")]
		public char ESTADO
		{
			get
			{
				return this._ESTADO;
			}
			set
			{
				if ((this._ESTADO != value))
				{
					this.OnESTADOChanging(value);
					this.SendPropertyChanging();
					this._ESTADO = value;
					this.SendPropertyChanged("ESTADO");
					this.OnESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFACTURA", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> IDFACTURA
		{
			get
			{
				return this._IDFACTURA;
			}
			set
			{
				if ((this._IDFACTURA != value))
				{
					if (this._FACTURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFACTURAChanging(value);
					this.SendPropertyChanging();
					this._IDFACTURA = value;
					this.SendPropertyChanged("IDFACTURA");
					this.OnIDFACTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_ORDENINTERNAMIENTO", Storage="_ORDENINTERNAMIENTOs", ThisKey="IDCITA", OtherKey="IDCITA")]
		public EntitySet<ORDENINTERNAMIENTO> ORDENINTERNAMIENTOs
		{
			get
			{
				return this._ORDENINTERNAMIENTOs;
			}
			set
			{
				this._ORDENINTERNAMIENTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_REFERENCIA", Storage="_REFERENCIAs", ThisKey="IDCITA", OtherKey="IDCITA")]
		public EntitySet<REFERENCIA> REFERENCIAs
		{
			get
			{
				return this._REFERENCIAs;
			}
			set
			{
				this._REFERENCIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SEGUIMIENTO", Storage="_SEGUIMIENTOs", ThisKey="IDCITA", OtherKey="IDCITA")]
		public EntitySet<SEGUIMIENTO> SEGUIMIENTOs
		{
			get
			{
				return this._SEGUIMIENTOs;
			}
			set
			{
				this._SEGUIMIENTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SEGUIMIENTO1", Storage="_SEGUIMIENTOs1", ThisKey="IDCITA", OtherKey="IDCITAANTERIOR")]
		public EntitySet<SEGUIMIENTO> SEGUIMIENTOs1
		{
			get
			{
				return this._SEGUIMIENTOs1;
			}
			set
			{
				this._SEGUIMIENTOs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_RECETA", Storage="_RECETAs", ThisKey="IDCITA", OtherKey="IDCITA")]
		public EntitySet<RECETA> RECETAs
		{
			get
			{
				return this._RECETAs;
			}
			set
			{
				this._RECETAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SOLICITUDEXAMEN", Storage="_SOLICITUDEXAMENs", ThisKey="IDCITA", OtherKey="IDCITA")]
		public EntitySet<SOLICITUDEXAMEN> SOLICITUDEXAMENs
		{
			get
			{
				return this._SOLICITUDEXAMENs;
			}
			set
			{
				this._SOLICITUDEXAMENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HORARIO_CITA", Storage="_HORARIO", ThisKey="DIACITA,HORACITA,MEDICO,SEDE", OtherKey="DIA,HORA,IDEMPLEADO,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HORARIO HORARIO
		{
			get
			{
				return this._HORARIO.Entity;
			}
			set
			{
				HORARIO previousValue = this._HORARIO.Entity;
				if (((previousValue != value) 
							|| (this._HORARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HORARIO.Entity = null;
						previousValue.CITAs.Remove(this);
					}
					this._HORARIO.Entity = value;
					if ((value != null))
					{
						value.CITAs.Add(this);
						this._DIACITA = value.DIA;
						this._HORACITA = value.HORA;
						this._MEDICO = value.IDEMPLEADO;
						this._SEDE = value.IDSEDE;
					}
					else
					{
						this._DIACITA = default(char);
						this._HORACITA = default(decimal);
						this._MEDICO = default(decimal);
						this._SEDE = default(decimal);
					}
					this.SendPropertyChanged("HORARIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICOESPECIALIDAD_CITA", Storage="_MEDICOESPECIALIDAD", ThisKey="MEDICO,SEDE,ESPECIALIDAD", OtherKey="IDMEDICO,IDSEDE,IDESPECIALIDAD", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEDICOESPECIALIDAD MEDICOESPECIALIDAD
		{
			get
			{
				return this._MEDICOESPECIALIDAD.Entity;
			}
			set
			{
				MEDICOESPECIALIDAD previousValue = this._MEDICOESPECIALIDAD.Entity;
				if (((previousValue != value) 
							|| (this._MEDICOESPECIALIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICOESPECIALIDAD.Entity = null;
						previousValue.CITAs.Remove(this);
					}
					this._MEDICOESPECIALIDAD.Entity = value;
					if ((value != null))
					{
						value.CITAs.Add(this);
						this._MEDICO = value.IDMEDICO;
						this._SEDE = value.IDSEDE;
						this._ESPECIALIDAD = value.IDESPECIALIDAD;
					}
					else
					{
						this._MEDICO = default(decimal);
						this._SEDE = default(decimal);
						this._ESPECIALIDAD = default(decimal);
					}
					this.SendPropertyChanged("MEDICOESPECIALIDAD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CITA", Storage="_PACIENTE", ThisKey="CEDULAPACIENTE", OtherKey="CEDULA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.CITAs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.CITAs.Add(this);
						this._CEDULAPACIENTE = value.CEDULA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_CITA", Storage="_FACTURA", ThisKey="IDFACTURA", OtherKey="IDFACTURA", IsForeignKey=true, DeleteRule="CASCADE")]
		public FACTURA FACTURA
		{
			get
			{
				return this._FACTURA.Entity;
			}
			set
			{
				FACTURA previousValue = this._FACTURA.Entity;
				if (((previousValue != value) 
							|| (this._FACTURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURA.Entity = null;
						previousValue.CITAs.Remove(this);
					}
					this._FACTURA.Entity = value;
					if ((value != null))
					{
						value.CITAs.Add(this);
						this._IDFACTURA = value.IDFACTURA;
					}
					else
					{
						this._IDFACTURA = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("FACTURA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDENINTERNAMIENTOs(ORDENINTERNAMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA = this;
		}
		
		private void detach_ORDENINTERNAMIENTOs(ORDENINTERNAMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA = null;
		}
		
		private void attach_REFERENCIAs(REFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.CITA = this;
		}
		
		private void detach_REFERENCIAs(REFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.CITA = null;
		}
		
		private void attach_SEGUIMIENTOs(SEGUIMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA = this;
		}
		
		private void detach_SEGUIMIENTOs(SEGUIMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA = null;
		}
		
		private void attach_SEGUIMIENTOs1(SEGUIMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA1 = this;
		}
		
		private void detach_SEGUIMIENTOs1(SEGUIMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.CITA1 = null;
		}
		
		private void attach_RECETAs(RECETA entity)
		{
			this.SendPropertyChanging();
			entity.CITA = this;
		}
		
		private void detach_RECETAs(RECETA entity)
		{
			this.SendPropertyChanging();
			entity.CITA = null;
		}
		
		private void attach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.CITA = this;
		}
		
		private void detach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.CITA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CITA.ORDENINTERNAMIENTO")]
	public partial class ORDENINTERNAMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDORDEN;
		
		private decimal _IDCITA;
		
		private decimal _SEDE;
		
		private string _MOTIVO;
		
		private string _OBSERVACIONES;
		
		private EntityRef<CITA> _CITA;
		
		private EntityRef<SEDE> _SEDE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDORDENChanging(decimal value);
    partial void OnIDORDENChanged();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnSEDEChanging(decimal value);
    partial void OnSEDEChanged();
    partial void OnMOTIVOChanging(string value);
    partial void OnMOTIVOChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    #endregion
		
		public ORDENINTERNAMIENTO()
		{
			this._CITA = default(EntityRef<CITA>);
			this._SEDE1 = default(EntityRef<SEDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORDEN", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDORDEN
		{
			get
			{
				return this._IDORDEN;
			}
			set
			{
				if ((this._IDORDEN != value))
				{
					this.OnIDORDENChanging(value);
					this.SendPropertyChanging();
					this._IDORDEN = value;
					this.SendPropertyChanged("IDORDEN");
					this.OnIDORDENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL")]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					if (this._CITA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEDE", DbType="Decimal(4,0) NOT NULL")]
		public decimal SEDE
		{
			get
			{
				return this._SEDE;
			}
			set
			{
				if ((this._SEDE != value))
				{
					if (this._SEDE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSEDEChanging(value);
					this.SendPropertyChanging();
					this._SEDE = value;
					this.SendPropertyChanged("SEDE");
					this.OnSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTIVO", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string MOTIVO
		{
			get
			{
				return this._MOTIVO;
			}
			set
			{
				if ((this._MOTIVO != value))
				{
					this.OnMOTIVOChanging(value);
					this.SendPropertyChanging();
					this._MOTIVO = value;
					this.SendPropertyChanged("MOTIVO");
					this.OnMOTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_ORDENINTERNAMIENTO", Storage="_CITA", ThisKey="IDCITA", OtherKey="IDCITA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CITA CITA
		{
			get
			{
				return this._CITA.Entity;
			}
			set
			{
				CITA previousValue = this._CITA.Entity;
				if (((previousValue != value) 
							|| (this._CITA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA.Entity = null;
						previousValue.ORDENINTERNAMIENTOs.Remove(this);
					}
					this._CITA.Entity = value;
					if ((value != null))
					{
						value.ORDENINTERNAMIENTOs.Add(this);
						this._IDCITA = value.IDCITA;
					}
					else
					{
						this._IDCITA = default(decimal);
					}
					this.SendPropertyChanged("CITA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_ORDENINTERNAMIENTO", Storage="_SEDE1", ThisKey="SEDE", OtherKey="IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SEDE SEDE1
		{
			get
			{
				return this._SEDE1.Entity;
			}
			set
			{
				SEDE previousValue = this._SEDE1.Entity;
				if (((previousValue != value) 
							|| (this._SEDE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEDE1.Entity = null;
						previousValue.ORDENINTERNAMIENTOs.Remove(this);
					}
					this._SEDE1.Entity = value;
					if ((value != null))
					{
						value.ORDENINTERNAMIENTOs.Add(this);
						this._SEDE = value.IDSEDE;
					}
					else
					{
						this._SEDE = default(decimal);
					}
					this.SendPropertyChanged("SEDE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CITA.REFERENCIA")]
	public partial class REFERENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDREFERENCIA;
		
		private decimal _IDCITA;
		
		private decimal _IDESPECIALIDAD;
		
		private string _COMENTARIOS;
		
		private EntityRef<CITA> _CITA;
		
		private EntityRef<ESPECIALIDAD> _ESPECIALIDAD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDREFERENCIAChanging(decimal value);
    partial void OnIDREFERENCIAChanged();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnIDESPECIALIDADChanging(decimal value);
    partial void OnIDESPECIALIDADChanged();
    partial void OnCOMENTARIOSChanging(string value);
    partial void OnCOMENTARIOSChanged();
    #endregion
		
		public REFERENCIA()
		{
			this._CITA = default(EntityRef<CITA>);
			this._ESPECIALIDAD = default(EntityRef<ESPECIALIDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREFERENCIA", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDREFERENCIA
		{
			get
			{
				return this._IDREFERENCIA;
			}
			set
			{
				if ((this._IDREFERENCIA != value))
				{
					this.OnIDREFERENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDREFERENCIA = value;
					this.SendPropertyChanged("IDREFERENCIA");
					this.OnIDREFERENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					if (this._CITA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDESPECIALIDAD", DbType="Decimal(9,0) NOT NULL")]
		public decimal IDESPECIALIDAD
		{
			get
			{
				return this._IDESPECIALIDAD;
			}
			set
			{
				if ((this._IDESPECIALIDAD != value))
				{
					if (this._ESPECIALIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._IDESPECIALIDAD = value;
					this.SendPropertyChanged("IDESPECIALIDAD");
					this.OnIDESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTARIOS", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string COMENTARIOS
		{
			get
			{
				return this._COMENTARIOS;
			}
			set
			{
				if ((this._COMENTARIOS != value))
				{
					this.OnCOMENTARIOSChanging(value);
					this.SendPropertyChanging();
					this._COMENTARIOS = value;
					this.SendPropertyChanged("COMENTARIOS");
					this.OnCOMENTARIOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_REFERENCIA", Storage="_CITA", ThisKey="IDCITA", OtherKey="IDCITA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CITA CITA
		{
			get
			{
				return this._CITA.Entity;
			}
			set
			{
				CITA previousValue = this._CITA.Entity;
				if (((previousValue != value) 
							|| (this._CITA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA.Entity = null;
						previousValue.REFERENCIAs.Remove(this);
					}
					this._CITA.Entity = value;
					if ((value != null))
					{
						value.REFERENCIAs.Add(this);
						this._IDCITA = value.IDCITA;
					}
					else
					{
						this._IDCITA = default(decimal);
					}
					this.SendPropertyChanged("CITA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPECIALIDAD_REFERENCIA", Storage="_ESPECIALIDAD", ThisKey="IDESPECIALIDAD", OtherKey="IDESPECIALIDAD", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ESPECIALIDAD ESPECIALIDAD
		{
			get
			{
				return this._ESPECIALIDAD.Entity;
			}
			set
			{
				ESPECIALIDAD previousValue = this._ESPECIALIDAD.Entity;
				if (((previousValue != value) 
							|| (this._ESPECIALIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESPECIALIDAD.Entity = null;
						previousValue.REFERENCIAs.Remove(this);
					}
					this._ESPECIALIDAD.Entity = value;
					if ((value != null))
					{
						value.REFERENCIAs.Add(this);
						this._IDESPECIALIDAD = value.IDESPECIALIDAD;
					}
					else
					{
						this._IDESPECIALIDAD = default(decimal);
					}
					this.SendPropertyChanged("ESPECIALIDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CITA.SEGUIMIENTO")]
	public partial class SEGUIMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDCITA;
		
		private decimal _IDCITAANTERIOR;
		
		private string _MOTIVO;
		
		private string _OBSERVACIONES;
		
		private EntityRef<CITA> _CITA;
		
		private EntityRef<CITA> _CITA1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnIDCITAANTERIORChanging(decimal value);
    partial void OnIDCITAANTERIORChanged();
    partial void OnMOTIVOChanging(string value);
    partial void OnMOTIVOChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    #endregion
		
		public SEGUIMIENTO()
		{
			this._CITA = default(EntityRef<CITA>);
			this._CITA1 = default(EntityRef<CITA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					if (this._CITA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITAANTERIOR", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDCITAANTERIOR
		{
			get
			{
				return this._IDCITAANTERIOR;
			}
			set
			{
				if ((this._IDCITAANTERIOR != value))
				{
					if (this._CITA1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAANTERIORChanging(value);
					this.SendPropertyChanging();
					this._IDCITAANTERIOR = value;
					this.SendPropertyChanged("IDCITAANTERIOR");
					this.OnIDCITAANTERIORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTIVO", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string MOTIVO
		{
			get
			{
				return this._MOTIVO;
			}
			set
			{
				if ((this._MOTIVO != value))
				{
					this.OnMOTIVOChanging(value);
					this.SendPropertyChanging();
					this._MOTIVO = value;
					this.SendPropertyChanged("MOTIVO");
					this.OnMOTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SEGUIMIENTO", Storage="_CITA", ThisKey="IDCITA", OtherKey="IDCITA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CITA CITA
		{
			get
			{
				return this._CITA.Entity;
			}
			set
			{
				CITA previousValue = this._CITA.Entity;
				if (((previousValue != value) 
							|| (this._CITA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA.Entity = null;
						previousValue.SEGUIMIENTOs.Remove(this);
					}
					this._CITA.Entity = value;
					if ((value != null))
					{
						value.SEGUIMIENTOs.Add(this);
						this._IDCITA = value.IDCITA;
					}
					else
					{
						this._IDCITA = default(decimal);
					}
					this.SendPropertyChanged("CITA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SEGUIMIENTO1", Storage="_CITA1", ThisKey="IDCITAANTERIOR", OtherKey="IDCITA", IsForeignKey=true)]
		public CITA CITA1
		{
			get
			{
				return this._CITA1.Entity;
			}
			set
			{
				CITA previousValue = this._CITA1.Entity;
				if (((previousValue != value) 
							|| (this._CITA1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA1.Entity = null;
						previousValue.SEGUIMIENTOs1.Remove(this);
					}
					this._CITA1.Entity = value;
					if ((value != null))
					{
						value.SEGUIMIENTOs1.Add(this);
						this._IDCITAANTERIOR = value.IDCITA;
					}
					else
					{
						this._IDCITAANTERIOR = default(decimal);
					}
					this.SendPropertyChanged("CITA1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.EMPLEADO")]
	public partial class EMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDPUESTO;
		
		private string _NOMBRE;
		
		private string _APELLIDOS;
		
		private string _RESIDENCIA;
		
		private decimal _FOTOGRAFIA;
		
		private EntitySet<EMPLEADOSEDE> _EMPLEADOSEDEs;
		
		private EntityRef<PUESTO> _PUESTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(decimal value);
    partial void OnIDEMPLEADOChanged();
    partial void OnIDPUESTOChanging(decimal value);
    partial void OnIDPUESTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPELLIDOSChanging(string value);
    partial void OnAPELLIDOSChanged();
    partial void OnRESIDENCIAChanging(string value);
    partial void OnRESIDENCIAChanged();
    partial void OnFOTOGRAFIAChanging(decimal value);
    partial void OnFOTOGRAFIAChanged();
    #endregion
		
		public EMPLEADO()
		{
			this._EMPLEADOSEDEs = new EntitySet<EMPLEADOSEDE>(new Action<EMPLEADOSEDE>(this.attach_EMPLEADOSEDEs), new Action<EMPLEADOSEDE>(this.detach_EMPLEADOSEDEs));
			this._PUESTO = default(EntityRef<PUESTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPUESTO", DbType="Decimal(2,0) NOT NULL")]
		public decimal IDPUESTO
		{
			get
			{
				return this._IDPUESTO;
			}
			set
			{
				if ((this._IDPUESTO != value))
				{
					if (this._PUESTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPUESTOChanging(value);
					this.SendPropertyChanging();
					this._IDPUESTO = value;
					this.SendPropertyChanged("IDPUESTO");
					this.OnIDPUESTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOS", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string APELLIDOS
		{
			get
			{
				return this._APELLIDOS;
			}
			set
			{
				if ((this._APELLIDOS != value))
				{
					this.OnAPELLIDOSChanging(value);
					this.SendPropertyChanging();
					this._APELLIDOS = value;
					this.SendPropertyChanged("APELLIDOS");
					this.OnAPELLIDOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESIDENCIA", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string RESIDENCIA
		{
			get
			{
				return this._RESIDENCIA;
			}
			set
			{
				if ((this._RESIDENCIA != value))
				{
					this.OnRESIDENCIAChanging(value);
					this.SendPropertyChanging();
					this._RESIDENCIA = value;
					this.SendPropertyChanged("RESIDENCIA");
					this.OnRESIDENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOTOGRAFIA", DbType="Decimal(9,0) NOT NULL")]
		public decimal FOTOGRAFIA
		{
			get
			{
				return this._FOTOGRAFIA;
			}
			set
			{
				if ((this._FOTOGRAFIA != value))
				{
					this.OnFOTOGRAFIAChanging(value);
					this.SendPropertyChanging();
					this._FOTOGRAFIA = value;
					this.SendPropertyChanged("FOTOGRAFIA");
					this.OnFOTOGRAFIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_EMPLEADOSEDE", Storage="_EMPLEADOSEDEs", ThisKey="IDEMPLEADO", OtherKey="IDEMPLEADO")]
		public EntitySet<EMPLEADOSEDE> EMPLEADOSEDEs
		{
			get
			{
				return this._EMPLEADOSEDEs;
			}
			set
			{
				this._EMPLEADOSEDEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUESTO_EMPLEADO", Storage="_PUESTO", ThisKey="IDPUESTO", OtherKey="IDPUESTO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PUESTO PUESTO
		{
			get
			{
				return this._PUESTO.Entity;
			}
			set
			{
				PUESTO previousValue = this._PUESTO.Entity;
				if (((previousValue != value) 
							|| (this._PUESTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PUESTO.Entity = null;
						previousValue.EMPLEADOs.Remove(this);
					}
					this._PUESTO.Entity = value;
					if ((value != null))
					{
						value.EMPLEADOs.Add(this);
						this._IDPUESTO = value.IDPUESTO;
					}
					else
					{
						this._IDPUESTO = default(decimal);
					}
					this.SendPropertyChanged("PUESTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADOSEDEs(EMPLEADOSEDE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = this;
		}
		
		private void detach_EMPLEADOSEDEs(EMPLEADOSEDE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.EMPLEADOSEDE")]
	public partial class EMPLEADOSEDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDSEDE;
		
		private System.DateTime _VIGENCIAFECHAINIC;
		
		private System.DateTime _VIGENCIAFECHAFINA;
		
		private EntitySet<ENCARGADOFARMACIA> _ENCARGADOFARMACIAs;
		
		private EntitySet<ENCARGADOLAB> _ENCARGADOLABs;
		
		private EntitySet<HORARIO> _HORARIOs;
		
		private EntitySet<MEDICOESPECIALIDAD> _MEDICOESPECIALIDADs;
		
		private EntityRef<EMPLEADO> _EMPLEADO;
		
		private EntityRef<SEDE> _SEDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(decimal value);
    partial void OnIDEMPLEADOChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnVIGENCIAFECHAINICChanging(System.DateTime value);
    partial void OnVIGENCIAFECHAINICChanged();
    partial void OnVIGENCIAFECHAFINAChanging(System.DateTime value);
    partial void OnVIGENCIAFECHAFINAChanged();
    #endregion
		
		public EMPLEADOSEDE()
		{
			this._ENCARGADOFARMACIAs = new EntitySet<ENCARGADOFARMACIA>(new Action<ENCARGADOFARMACIA>(this.attach_ENCARGADOFARMACIAs), new Action<ENCARGADOFARMACIA>(this.detach_ENCARGADOFARMACIAs));
			this._ENCARGADOLABs = new EntitySet<ENCARGADOLAB>(new Action<ENCARGADOLAB>(this.attach_ENCARGADOLABs), new Action<ENCARGADOLAB>(this.detach_ENCARGADOLABs));
			this._HORARIOs = new EntitySet<HORARIO>(new Action<HORARIO>(this.attach_HORARIOs), new Action<HORARIO>(this.detach_HORARIOs));
			this._MEDICOESPECIALIDADs = new EntitySet<MEDICOESPECIALIDAD>(new Action<MEDICOESPECIALIDAD>(this.attach_MEDICOESPECIALIDADs), new Action<MEDICOESPECIALIDAD>(this.detach_MEDICOESPECIALIDADs));
			this._EMPLEADO = default(EntityRef<EMPLEADO>);
			this._SEDE = default(EntityRef<SEDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					if (this._EMPLEADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._SEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIGENCIAFECHAINIC", DbType="Date NOT NULL")]
		public System.DateTime VIGENCIAFECHAINIC
		{
			get
			{
				return this._VIGENCIAFECHAINIC;
			}
			set
			{
				if ((this._VIGENCIAFECHAINIC != value))
				{
					this.OnVIGENCIAFECHAINICChanging(value);
					this.SendPropertyChanging();
					this._VIGENCIAFECHAINIC = value;
					this.SendPropertyChanged("VIGENCIAFECHAINIC");
					this.OnVIGENCIAFECHAINICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIGENCIAFECHAFINA", DbType="Date NOT NULL")]
		public System.DateTime VIGENCIAFECHAFINA
		{
			get
			{
				return this._VIGENCIAFECHAFINA;
			}
			set
			{
				if ((this._VIGENCIAFECHAFINA != value))
				{
					this.OnVIGENCIAFECHAFINAChanging(value);
					this.SendPropertyChanging();
					this._VIGENCIAFECHAFINA = value;
					this.SendPropertyChanged("VIGENCIAFECHAFINA");
					this.OnVIGENCIAFECHAFINAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_ENCARGADOFARMACIA", Storage="_ENCARGADOFARMACIAs", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE")]
		public EntitySet<ENCARGADOFARMACIA> ENCARGADOFARMACIAs
		{
			get
			{
				return this._ENCARGADOFARMACIAs;
			}
			set
			{
				this._ENCARGADOFARMACIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_ENCARGADOLAB", Storage="_ENCARGADOLABs", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE")]
		public EntitySet<ENCARGADOLAB> ENCARGADOLABs
		{
			get
			{
				return this._ENCARGADOLABs;
			}
			set
			{
				this._ENCARGADOLABs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_HORARIO", Storage="_HORARIOs", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE")]
		public EntitySet<HORARIO> HORARIOs
		{
			get
			{
				return this._HORARIOs;
			}
			set
			{
				this._HORARIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_MEDICOESPECIALIDAD", Storage="_MEDICOESPECIALIDADs", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDMEDICO,IDSEDE")]
		public EntitySet<MEDICOESPECIALIDAD> MEDICOESPECIALIDADs
		{
			get
			{
				return this._MEDICOESPECIALIDADs;
			}
			set
			{
				this._MEDICOESPECIALIDADs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_EMPLEADOSEDE", Storage="_EMPLEADO", ThisKey="IDEMPLEADO", OtherKey="IDEMPLEADO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EMPLEADO EMPLEADO
		{
			get
			{
				return this._EMPLEADO.Entity;
			}
			set
			{
				EMPLEADO previousValue = this._EMPLEADO.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADO.Entity = null;
						previousValue.EMPLEADOSEDEs.Remove(this);
					}
					this._EMPLEADO.Entity = value;
					if ((value != null))
					{
						value.EMPLEADOSEDEs.Add(this);
						this._IDEMPLEADO = value.IDEMPLEADO;
					}
					else
					{
						this._IDEMPLEADO = default(decimal);
					}
					this.SendPropertyChanged("EMPLEADO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_EMPLEADOSEDE", Storage="_SEDE", ThisKey="IDSEDE", OtherKey="IDSEDE", IsForeignKey=true)]
		public SEDE SEDE
		{
			get
			{
				return this._SEDE.Entity;
			}
			set
			{
				SEDE previousValue = this._SEDE.Entity;
				if (((previousValue != value) 
							|| (this._SEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEDE.Entity = null;
						previousValue.EMPLEADOSEDEs.Remove(this);
					}
					this._SEDE.Entity = value;
					if ((value != null))
					{
						value.EMPLEADOSEDEs.Add(this);
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("SEDE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ENCARGADOFARMACIAs(ENCARGADOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = this;
		}
		
		private void detach_ENCARGADOFARMACIAs(ENCARGADOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = null;
		}
		
		private void attach_ENCARGADOLABs(ENCARGADOLAB entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = this;
		}
		
		private void detach_ENCARGADOLABs(ENCARGADOLAB entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = null;
		}
		
		private void attach_HORARIOs(HORARIO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = this;
		}
		
		private void detach_HORARIOs(HORARIO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = null;
		}
		
		private void attach_MEDICOESPECIALIDADs(MEDICOESPECIALIDAD entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = this;
		}
		
		private void detach_MEDICOESPECIALIDADs(MEDICOESPECIALIDAD entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADOSEDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.ENCARGADOFARMACIA")]
	public partial class ENCARGADOFARMACIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDFARMACIA;
		
		private decimal _IDSEDE;
		
		private EntityRef<EMPLEADOSEDE> _EMPLEADOSEDE;
		
		private EntityRef<FARMACIA> _FARMACIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(decimal value);
    partial void OnIDEMPLEADOChanged();
    partial void OnIDFARMACIAChanging(decimal value);
    partial void OnIDFARMACIAChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    #endregion
		
		public ENCARGADOFARMACIA()
		{
			this._EMPLEADOSEDE = default(EntityRef<EMPLEADOSEDE>);
			this._FARMACIA = default(EntityRef<FARMACIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFARMACIA", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDFARMACIA
		{
			get
			{
				return this._IDFARMACIA;
			}
			set
			{
				if ((this._IDFARMACIA != value))
				{
					if (this._FARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFARMACIAChanging(value);
					this.SendPropertyChanging();
					this._IDFARMACIA = value;
					this.SendPropertyChanged("IDFARMACIA");
					this.OnIDFARMACIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if ((this._EMPLEADOSEDE.HasLoadedOrAssignedValue || this._FARMACIA.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_ENCARGADOFARMACIA", Storage="_EMPLEADOSEDE", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EMPLEADOSEDE EMPLEADOSEDE
		{
			get
			{
				return this._EMPLEADOSEDE.Entity;
			}
			set
			{
				EMPLEADOSEDE previousValue = this._EMPLEADOSEDE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADOSEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADOSEDE.Entity = null;
						previousValue.ENCARGADOFARMACIAs.Remove(this);
					}
					this._EMPLEADOSEDE.Entity = value;
					if ((value != null))
					{
						value.ENCARGADOFARMACIAs.Add(this);
						this._IDEMPLEADO = value.IDEMPLEADO;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDEMPLEADO = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("EMPLEADOSEDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FARMACIA_ENCARGADOFARMACIA", Storage="_FARMACIA", ThisKey="IDFARMACIA,IDSEDE", OtherKey="IDFARMACIA,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FARMACIA FARMACIA
		{
			get
			{
				return this._FARMACIA.Entity;
			}
			set
			{
				FARMACIA previousValue = this._FARMACIA.Entity;
				if (((previousValue != value) 
							|| (this._FARMACIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FARMACIA.Entity = null;
						previousValue.ENCARGADOFARMACIAs.Remove(this);
					}
					this._FARMACIA.Entity = value;
					if ((value != null))
					{
						value.ENCARGADOFARMACIAs.Add(this);
						this._IDFARMACIA = value.IDFARMACIA;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDFARMACIA = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("FARMACIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.ENCARGADOLAB")]
	public partial class ENCARGADOLAB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDLABORATORIO;
		
		private decimal _IDSEDE;
		
		private EntityRef<EMPLEADOSEDE> _EMPLEADOSEDE;
		
		private EntityRef<LABORATORIO> _LABORATORIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(decimal value);
    partial void OnIDEMPLEADOChanged();
    partial void OnIDLABORATORIOChanging(decimal value);
    partial void OnIDLABORATORIOChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    #endregion
		
		public ENCARGADOLAB()
		{
			this._EMPLEADOSEDE = default(EntityRef<EMPLEADOSEDE>);
			this._LABORATORIO = default(EntityRef<LABORATORIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLABORATORIO", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDLABORATORIO
		{
			get
			{
				return this._IDLABORATORIO;
			}
			set
			{
				if ((this._IDLABORATORIO != value))
				{
					if (this._LABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLABORATORIOChanging(value);
					this.SendPropertyChanging();
					this._IDLABORATORIO = value;
					this.SendPropertyChanged("IDLABORATORIO");
					this.OnIDLABORATORIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_ENCARGADOLAB", Storage="_EMPLEADOSEDE", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EMPLEADOSEDE EMPLEADOSEDE
		{
			get
			{
				return this._EMPLEADOSEDE.Entity;
			}
			set
			{
				EMPLEADOSEDE previousValue = this._EMPLEADOSEDE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADOSEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADOSEDE.Entity = null;
						previousValue.ENCARGADOLABs.Remove(this);
					}
					this._EMPLEADOSEDE.Entity = value;
					if ((value != null))
					{
						value.ENCARGADOLABs.Add(this);
						this._IDEMPLEADO = value.IDEMPLEADO;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDEMPLEADO = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("EMPLEADOSEDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_ENCARGADOLAB", Storage="_LABORATORIO", ThisKey="IDLABORATORIO", OtherKey="IDLABORATORIO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LABORATORIO LABORATORIO
		{
			get
			{
				return this._LABORATORIO.Entity;
			}
			set
			{
				LABORATORIO previousValue = this._LABORATORIO.Entity;
				if (((previousValue != value) 
							|| (this._LABORATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LABORATORIO.Entity = null;
						previousValue.ENCARGADOLABs.Remove(this);
					}
					this._LABORATORIO.Entity = value;
					if ((value != null))
					{
						value.ENCARGADOLABs.Add(this);
						this._IDLABORATORIO = value.IDLABORATORIO;
					}
					else
					{
						this._IDLABORATORIO = default(decimal);
					}
					this.SendPropertyChanged("LABORATORIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.ESPECIALIDAD")]
	public partial class ESPECIALIDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDESPECIALIDAD;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<REFERENCIA> _REFERENCIAs;
		
		private EntitySet<MEDICOESPECIALIDAD> _MEDICOESPECIALIDADs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDESPECIALIDADChanging(decimal value);
    partial void OnIDESPECIALIDADChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public ESPECIALIDAD()
		{
			this._REFERENCIAs = new EntitySet<REFERENCIA>(new Action<REFERENCIA>(this.attach_REFERENCIAs), new Action<REFERENCIA>(this.detach_REFERENCIAs));
			this._MEDICOESPECIALIDADs = new EntitySet<MEDICOESPECIALIDAD>(new Action<MEDICOESPECIALIDAD>(this.attach_MEDICOESPECIALIDADs), new Action<MEDICOESPECIALIDAD>(this.detach_MEDICOESPECIALIDADs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDESPECIALIDAD", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDESPECIALIDAD
		{
			get
			{
				return this._IDESPECIALIDAD;
			}
			set
			{
				if ((this._IDESPECIALIDAD != value))
				{
					this.OnIDESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._IDESPECIALIDAD = value;
					this.SendPropertyChanged("IDESPECIALIDAD");
					this.OnIDESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPECIALIDAD_REFERENCIA", Storage="_REFERENCIAs", ThisKey="IDESPECIALIDAD", OtherKey="IDESPECIALIDAD")]
		public EntitySet<REFERENCIA> REFERENCIAs
		{
			get
			{
				return this._REFERENCIAs;
			}
			set
			{
				this._REFERENCIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPECIALIDAD_MEDICOESPECIALIDAD", Storage="_MEDICOESPECIALIDADs", ThisKey="IDESPECIALIDAD", OtherKey="IDESPECIALIDAD")]
		public EntitySet<MEDICOESPECIALIDAD> MEDICOESPECIALIDADs
		{
			get
			{
				return this._MEDICOESPECIALIDADs;
			}
			set
			{
				this._MEDICOESPECIALIDADs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REFERENCIAs(REFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.ESPECIALIDAD = this;
		}
		
		private void detach_REFERENCIAs(REFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.ESPECIALIDAD = null;
		}
		
		private void attach_MEDICOESPECIALIDADs(MEDICOESPECIALIDAD entity)
		{
			this.SendPropertyChanging();
			entity.ESPECIALIDAD = this;
		}
		
		private void detach_MEDICOESPECIALIDADs(MEDICOESPECIALIDAD entity)
		{
			this.SendPropertyChanging();
			entity.ESPECIALIDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.HORARIO")]
	public partial class HORARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDSEDE;
		
		private char _DIA;
		
		private decimal _HORA;
		
		private EntitySet<CITA> _CITAs;
		
		private EntityRef<EMPLEADOSEDE> _EMPLEADOSEDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(decimal value);
    partial void OnIDEMPLEADOChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnDIAChanging(char value);
    partial void OnDIAChanged();
    partial void OnHORAChanging(decimal value);
    partial void OnHORAChanged();
    #endregion
		
		public HORARIO()
		{
			this._CITAs = new EntitySet<CITA>(new Action<CITA>(this.attach_CITAs), new Action<CITA>(this.detach_CITAs));
			this._EMPLEADOSEDE = default(EntityRef<EMPLEADOSEDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIA", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char DIA
		{
			get
			{
				return this._DIA;
			}
			set
			{
				if ((this._DIA != value))
				{
					this.OnDIAChanging(value);
					this.SendPropertyChanging();
					this._DIA = value;
					this.SendPropertyChanged("DIA");
					this.OnDIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal HORA
		{
			get
			{
				return this._HORA;
			}
			set
			{
				if ((this._HORA != value))
				{
					this.OnHORAChanging(value);
					this.SendPropertyChanging();
					this._HORA = value;
					this.SendPropertyChanged("HORA");
					this.OnHORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HORARIO_CITA", Storage="_CITAs", ThisKey="DIA,HORA,IDEMPLEADO,IDSEDE", OtherKey="DIACITA,HORACITA,MEDICO,SEDE")]
		public EntitySet<CITA> CITAs
		{
			get
			{
				return this._CITAs;
			}
			set
			{
				this._CITAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_HORARIO", Storage="_EMPLEADOSEDE", ThisKey="IDEMPLEADO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE", IsForeignKey=true)]
		public EMPLEADOSEDE EMPLEADOSEDE
		{
			get
			{
				return this._EMPLEADOSEDE.Entity;
			}
			set
			{
				EMPLEADOSEDE previousValue = this._EMPLEADOSEDE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADOSEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADOSEDE.Entity = null;
						previousValue.HORARIOs.Remove(this);
					}
					this._EMPLEADOSEDE.Entity = value;
					if ((value != null))
					{
						value.HORARIOs.Add(this);
						this._IDEMPLEADO = value.IDEMPLEADO;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDEMPLEADO = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("EMPLEADOSEDE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.HORARIO = this;
		}
		
		private void detach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.HORARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.MEDICOESPECIALIDAD")]
	public partial class MEDICOESPECIALIDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDMEDICO;
		
		private decimal _IDSEDE;
		
		private decimal _IDESPECIALIDAD;
		
		private decimal _PRECIOCITA;
		
		private EntitySet<CITA> _CITAs;
		
		private EntityRef<ESPECIALIDAD> _ESPECIALIDAD;
		
		private EntityRef<EMPLEADOSEDE> _EMPLEADOSEDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMEDICOChanging(decimal value);
    partial void OnIDMEDICOChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnIDESPECIALIDADChanging(decimal value);
    partial void OnIDESPECIALIDADChanged();
    partial void OnPRECIOCITAChanging(decimal value);
    partial void OnPRECIOCITAChanged();
    #endregion
		
		public MEDICOESPECIALIDAD()
		{
			this._CITAs = new EntitySet<CITA>(new Action<CITA>(this.attach_CITAs), new Action<CITA>(this.detach_CITAs));
			this._ESPECIALIDAD = default(EntityRef<ESPECIALIDAD>);
			this._EMPLEADOSEDE = default(EntityRef<EMPLEADOSEDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMEDICO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDMEDICO
		{
			get
			{
				return this._IDMEDICO;
			}
			set
			{
				if ((this._IDMEDICO != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMEDICOChanging(value);
					this.SendPropertyChanging();
					this._IDMEDICO = value;
					this.SendPropertyChanged("IDMEDICO");
					this.OnIDMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._EMPLEADOSEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDESPECIALIDAD", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDESPECIALIDAD
		{
			get
			{
				return this._IDESPECIALIDAD;
			}
			set
			{
				if ((this._IDESPECIALIDAD != value))
				{
					if (this._ESPECIALIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._IDESPECIALIDAD = value;
					this.SendPropertyChanged("IDESPECIALIDAD");
					this.OnIDESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIOCITA", DbType="Decimal(7,2) NOT NULL")]
		public decimal PRECIOCITA
		{
			get
			{
				return this._PRECIOCITA;
			}
			set
			{
				if ((this._PRECIOCITA != value))
				{
					this.OnPRECIOCITAChanging(value);
					this.SendPropertyChanging();
					this._PRECIOCITA = value;
					this.SendPropertyChanged("PRECIOCITA");
					this.OnPRECIOCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICOESPECIALIDAD_CITA", Storage="_CITAs", ThisKey="IDMEDICO,IDSEDE,IDESPECIALIDAD", OtherKey="MEDICO,SEDE,ESPECIALIDAD")]
		public EntitySet<CITA> CITAs
		{
			get
			{
				return this._CITAs;
			}
			set
			{
				this._CITAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPECIALIDAD_MEDICOESPECIALIDAD", Storage="_ESPECIALIDAD", ThisKey="IDESPECIALIDAD", OtherKey="IDESPECIALIDAD", IsForeignKey=true)]
		public ESPECIALIDAD ESPECIALIDAD
		{
			get
			{
				return this._ESPECIALIDAD.Entity;
			}
			set
			{
				ESPECIALIDAD previousValue = this._ESPECIALIDAD.Entity;
				if (((previousValue != value) 
							|| (this._ESPECIALIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESPECIALIDAD.Entity = null;
						previousValue.MEDICOESPECIALIDADs.Remove(this);
					}
					this._ESPECIALIDAD.Entity = value;
					if ((value != null))
					{
						value.MEDICOESPECIALIDADs.Add(this);
						this._IDESPECIALIDAD = value.IDESPECIALIDAD;
					}
					else
					{
						this._IDESPECIALIDAD = default(decimal);
					}
					this.SendPropertyChanged("ESPECIALIDAD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADOSEDE_MEDICOESPECIALIDAD", Storage="_EMPLEADOSEDE", ThisKey="IDMEDICO,IDSEDE", OtherKey="IDEMPLEADO,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EMPLEADOSEDE EMPLEADOSEDE
		{
			get
			{
				return this._EMPLEADOSEDE.Entity;
			}
			set
			{
				EMPLEADOSEDE previousValue = this._EMPLEADOSEDE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADOSEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADOSEDE.Entity = null;
						previousValue.MEDICOESPECIALIDADs.Remove(this);
					}
					this._EMPLEADOSEDE.Entity = value;
					if ((value != null))
					{
						value.MEDICOESPECIALIDADs.Add(this);
						this._IDMEDICO = value.IDEMPLEADO;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDMEDICO = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("EMPLEADOSEDE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICOESPECIALIDAD = this;
		}
		
		private void detach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICOESPECIALIDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SEDE.SEDE")]
	public partial class SEDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDSEDE;
		
		private decimal _CEDULAJURIDICA;
		
		private string _RAZONSOCIAL;
		
		private string _DIRECCION;
		
		private EntitySet<ORDENINTERNAMIENTO> _ORDENINTERNAMIENTOs;
		
		private EntitySet<EMPLEADOSEDE> _EMPLEADOSEDEs;
		
		private EntitySet<LABORATORIO> _LABORATORIOs;
		
		private EntitySet<FARMACIA> _FARMACIAs;
		
		private EntityRef<CENTRO> _CENTRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnCEDULAJURIDICAChanging(decimal value);
    partial void OnCEDULAJURIDICAChanged();
    partial void OnRAZONSOCIALChanging(string value);
    partial void OnRAZONSOCIALChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    #endregion
		
		public SEDE()
		{
			this._ORDENINTERNAMIENTOs = new EntitySet<ORDENINTERNAMIENTO>(new Action<ORDENINTERNAMIENTO>(this.attach_ORDENINTERNAMIENTOs), new Action<ORDENINTERNAMIENTO>(this.detach_ORDENINTERNAMIENTOs));
			this._EMPLEADOSEDEs = new EntitySet<EMPLEADOSEDE>(new Action<EMPLEADOSEDE>(this.attach_EMPLEADOSEDEs), new Action<EMPLEADOSEDE>(this.detach_EMPLEADOSEDEs));
			this._LABORATORIOs = new EntitySet<LABORATORIO>(new Action<LABORATORIO>(this.attach_LABORATORIOs), new Action<LABORATORIO>(this.detach_LABORATORIOs));
			this._FARMACIAs = new EntitySet<FARMACIA>(new Action<FARMACIA>(this.attach_FARMACIAs), new Action<FARMACIA>(this.detach_FARMACIAs));
			this._CENTRO = default(EntityRef<CENTRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAJURIDICA", DbType="Decimal(14,0) NOT NULL")]
		public decimal CEDULAJURIDICA
		{
			get
			{
				return this._CEDULAJURIDICA;
			}
			set
			{
				if ((this._CEDULAJURIDICA != value))
				{
					if (this._CENTRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAJURIDICAChanging(value);
					this.SendPropertyChanging();
					this._CEDULAJURIDICA = value;
					this.SendPropertyChanged("CEDULAJURIDICA");
					this.OnCEDULAJURIDICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAZONSOCIAL", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RAZONSOCIAL
		{
			get
			{
				return this._RAZONSOCIAL;
			}
			set
			{
				if ((this._RAZONSOCIAL != value))
				{
					this.OnRAZONSOCIALChanging(value);
					this.SendPropertyChanging();
					this._RAZONSOCIAL = value;
					this.SendPropertyChanged("RAZONSOCIAL");
					this.OnRAZONSOCIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_ORDENINTERNAMIENTO", Storage="_ORDENINTERNAMIENTOs", ThisKey="IDSEDE", OtherKey="SEDE")]
		public EntitySet<ORDENINTERNAMIENTO> ORDENINTERNAMIENTOs
		{
			get
			{
				return this._ORDENINTERNAMIENTOs;
			}
			set
			{
				this._ORDENINTERNAMIENTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_EMPLEADOSEDE", Storage="_EMPLEADOSEDEs", ThisKey="IDSEDE", OtherKey="IDSEDE")]
		public EntitySet<EMPLEADOSEDE> EMPLEADOSEDEs
		{
			get
			{
				return this._EMPLEADOSEDEs;
			}
			set
			{
				this._EMPLEADOSEDEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_LABORATORIO", Storage="_LABORATORIOs", ThisKey="IDSEDE", OtherKey="IDSEDE")]
		public EntitySet<LABORATORIO> LABORATORIOs
		{
			get
			{
				return this._LABORATORIOs;
			}
			set
			{
				this._LABORATORIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_FARMACIA", Storage="_FARMACIAs", ThisKey="IDSEDE", OtherKey="IDSEDE")]
		public EntitySet<FARMACIA> FARMACIAs
		{
			get
			{
				return this._FARMACIAs;
			}
			set
			{
				this._FARMACIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CENTRO_SEDE", Storage="_CENTRO", ThisKey="CEDULAJURIDICA", OtherKey="CEDULAJURIDICA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CENTRO CENTRO
		{
			get
			{
				return this._CENTRO.Entity;
			}
			set
			{
				CENTRO previousValue = this._CENTRO.Entity;
				if (((previousValue != value) 
							|| (this._CENTRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CENTRO.Entity = null;
						previousValue.SEDEs.Remove(this);
					}
					this._CENTRO.Entity = value;
					if ((value != null))
					{
						value.SEDEs.Add(this);
						this._CEDULAJURIDICA = value.CEDULAJURIDICA;
					}
					else
					{
						this._CEDULAJURIDICA = default(decimal);
					}
					this.SendPropertyChanged("CENTRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDENINTERNAMIENTOs(ORDENINTERNAMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.SEDE1 = this;
		}
		
		private void detach_ORDENINTERNAMIENTOs(ORDENINTERNAMIENTO entity)
		{
			this.SendPropertyChanging();
			entity.SEDE1 = null;
		}
		
		private void attach_EMPLEADOSEDEs(EMPLEADOSEDE entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = this;
		}
		
		private void detach_EMPLEADOSEDEs(EMPLEADOSEDE entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = null;
		}
		
		private void attach_LABORATORIOs(LABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = this;
		}
		
		private void detach_LABORATORIOs(LABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = null;
		}
		
		private void attach_FARMACIAs(FARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = this;
		}
		
		private void detach_FARMACIAs(FARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.SEDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SEDE.CENTRO")]
	public partial class CENTRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CEDULAJURIDICA;
		
		private string _RAZONSOCIAL;
		
		private EntitySet<SEDE> _SEDEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAJURIDICAChanging(decimal value);
    partial void OnCEDULAJURIDICAChanged();
    partial void OnRAZONSOCIALChanging(string value);
    partial void OnRAZONSOCIALChanged();
    #endregion
		
		public CENTRO()
		{
			this._SEDEs = new EntitySet<SEDE>(new Action<SEDE>(this.attach_SEDEs), new Action<SEDE>(this.detach_SEDEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAJURIDICA", DbType="Decimal(14,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CEDULAJURIDICA
		{
			get
			{
				return this._CEDULAJURIDICA;
			}
			set
			{
				if ((this._CEDULAJURIDICA != value))
				{
					this.OnCEDULAJURIDICAChanging(value);
					this.SendPropertyChanging();
					this._CEDULAJURIDICA = value;
					this.SendPropertyChanged("CEDULAJURIDICA");
					this.OnCEDULAJURIDICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAZONSOCIAL", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RAZONSOCIAL
		{
			get
			{
				return this._RAZONSOCIAL;
			}
			set
			{
				if ((this._RAZONSOCIAL != value))
				{
					this.OnRAZONSOCIALChanging(value);
					this.SendPropertyChanging();
					this._RAZONSOCIAL = value;
					this.SendPropertyChanged("RAZONSOCIAL");
					this.OnRAZONSOCIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CENTRO_SEDE", Storage="_SEDEs", ThisKey="CEDULAJURIDICA", OtherKey="CEDULAJURIDICA")]
		public EntitySet<SEDE> SEDEs
		{
			get
			{
				return this._SEDEs;
			}
			set
			{
				this._SEDEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SEDEs(SEDE entity)
		{
			this.SendPropertyChanging();
			entity.CENTRO = this;
		}
		
		private void detach_SEDEs(SEDE entity)
		{
			this.SendPropertyChanging();
			entity.CENTRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RECETA.RECETA")]
	public partial class RECETA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDRECETA;
		
		private System.Nullable<decimal> _IDFACTURA;
		
		private decimal _IDCITA;
		
		private System.Nullable<System.DateTime> _FECHAENTREGA;
		
		private System.Nullable<decimal> _IDFARMACEUTICO;
		
		private EntitySet<LINEARECETA> _LINEARECETAs;
		
		private EntityRef<CITA> _CITA;
		
		private EntityRef<FACTURA> _FACTURA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRECETAChanging(decimal value);
    partial void OnIDRECETAChanged();
    partial void OnIDFACTURAChanging(System.Nullable<decimal> value);
    partial void OnIDFACTURAChanged();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnFECHAENTREGAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAENTREGAChanged();
    partial void OnIDFARMACEUTICOChanging(System.Nullable<decimal> value);
    partial void OnIDFARMACEUTICOChanged();
    #endregion
		
		public RECETA()
		{
			this._LINEARECETAs = new EntitySet<LINEARECETA>(new Action<LINEARECETA>(this.attach_LINEARECETAs), new Action<LINEARECETA>(this.detach_LINEARECETAs));
			this._CITA = default(EntityRef<CITA>);
			this._FACTURA = default(EntityRef<FACTURA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRECETA", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDRECETA
		{
			get
			{
				return this._IDRECETA;
			}
			set
			{
				if ((this._IDRECETA != value))
				{
					this.OnIDRECETAChanging(value);
					this.SendPropertyChanging();
					this._IDRECETA = value;
					this.SendPropertyChanged("IDRECETA");
					this.OnIDRECETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFACTURA", DbType="Decimal(20,0)")]
		public System.Nullable<decimal> IDFACTURA
		{
			get
			{
				return this._IDFACTURA;
			}
			set
			{
				if ((this._IDFACTURA != value))
				{
					if (this._FACTURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFACTURAChanging(value);
					this.SendPropertyChanging();
					this._IDFACTURA = value;
					this.SendPropertyChanged("IDFACTURA");
					this.OnIDFACTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL")]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					if (this._CITA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAENTREGA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHAENTREGA
		{
			get
			{
				return this._FECHAENTREGA;
			}
			set
			{
				if ((this._FECHAENTREGA != value))
				{
					this.OnFECHAENTREGAChanging(value);
					this.SendPropertyChanging();
					this._FECHAENTREGA = value;
					this.SendPropertyChanged("FECHAENTREGA");
					this.OnFECHAENTREGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFARMACEUTICO", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> IDFARMACEUTICO
		{
			get
			{
				return this._IDFARMACEUTICO;
			}
			set
			{
				if ((this._IDFARMACEUTICO != value))
				{
					this.OnIDFARMACEUTICOChanging(value);
					this.SendPropertyChanging();
					this._IDFARMACEUTICO = value;
					this.SendPropertyChanged("IDFARMACEUTICO");
					this.OnIDFARMACEUTICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECETA_LINEARECETA", Storage="_LINEARECETAs", ThisKey="IDRECETA", OtherKey="IDRECETA")]
		public EntitySet<LINEARECETA> LINEARECETAs
		{
			get
			{
				return this._LINEARECETAs;
			}
			set
			{
				this._LINEARECETAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_RECETA", Storage="_CITA", ThisKey="IDCITA", OtherKey="IDCITA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CITA CITA
		{
			get
			{
				return this._CITA.Entity;
			}
			set
			{
				CITA previousValue = this._CITA.Entity;
				if (((previousValue != value) 
							|| (this._CITA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA.Entity = null;
						previousValue.RECETAs.Remove(this);
					}
					this._CITA.Entity = value;
					if ((value != null))
					{
						value.RECETAs.Add(this);
						this._IDCITA = value.IDCITA;
					}
					else
					{
						this._IDCITA = default(decimal);
					}
					this.SendPropertyChanged("CITA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_RECETA", Storage="_FACTURA", ThisKey="IDFACTURA", OtherKey="IDFACTURA", IsForeignKey=true)]
		public FACTURA FACTURA
		{
			get
			{
				return this._FACTURA.Entity;
			}
			set
			{
				FACTURA previousValue = this._FACTURA.Entity;
				if (((previousValue != value) 
							|| (this._FACTURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURA.Entity = null;
						previousValue.RECETAs.Remove(this);
					}
					this._FACTURA.Entity = value;
					if ((value != null))
					{
						value.RECETAs.Add(this);
						this._IDFACTURA = value.IDFACTURA;
					}
					else
					{
						this._IDFACTURA = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("FACTURA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINEARECETAs(LINEARECETA entity)
		{
			this.SendPropertyChanging();
			entity.RECETA = this;
		}
		
		private void detach_LINEARECETAs(LINEARECETA entity)
		{
			this.SendPropertyChanging();
			entity.RECETA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.VALORACIONEMERGENCIA")]
	public partial class VALORACIONEMERGENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CEDULAPACIENTE;
		
		private System.DateTime _FECHA;
		
		private string _OBSERVACIONES;
		
		private EntitySet<SIGNOVITALVALORACION> _SIGNOVITALVALORACIONs;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    #endregion
		
		public VALORACIONEMERGENCIA()
		{
			this._SIGNOVITALVALORACIONs = new EntitySet<SIGNOVITALVALORACION>(new Action<SIGNOVITALVALORACION>(this.attach_SIGNOVITALVALORACIONs), new Action<SIGNOVITALVALORACION>(this.detach_SIGNOVITALVALORACIONs));
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(50)")]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALORACIONEMERGENCIA_SIGNOVITALVALORACION", Storage="_SIGNOVITALVALORACIONs", ThisKey="CEDULAPACIENTE,FECHA", OtherKey="CEDULAPACIENTE,FECHA")]
		public EntitySet<SIGNOVITALVALORACION> SIGNOVITALVALORACIONs
		{
			get
			{
				return this._SIGNOVITALVALORACIONs;
			}
			set
			{
				this._SIGNOVITALVALORACIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_VALORACIONEMERGENCIA", Storage="_PACIENTE", ThisKey="CEDULAPACIENTE", OtherKey="CEDULA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.VALORACIONEMERGENCIAs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.VALORACIONEMERGENCIAs.Add(this);
						this._CEDULAPACIENTE = value.CEDULA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SIGNOVITALVALORACIONs(SIGNOVITALVALORACION entity)
		{
			this.SendPropertyChanging();
			entity.VALORACIONEMERGENCIA = this;
		}
		
		private void detach_SIGNOVITALVALORACIONs(SIGNOVITALVALORACION entity)
		{
			this.SendPropertyChanging();
			entity.VALORACIONEMERGENCIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RECETA.LINEARECETA")]
	public partial class LINEARECETA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDRECETA;
		
		private decimal _IDLINEA;
		
		private decimal _IDMEDICAMENTO;
		
		private decimal _IDFARMACIA;
		
		private decimal _IDSEDE;
		
		private decimal _CANTIDAD;
		
		private string _INSTRUCCIONES;
		
		private EntityRef<RECETA> _RECETA;
		
		private EntityRef<MEDICAMENTOFARMACIA> _MEDICAMENTOFARMACIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRECETAChanging(decimal value);
    partial void OnIDRECETAChanged();
    partial void OnIDLINEAChanging(decimal value);
    partial void OnIDLINEAChanged();
    partial void OnIDMEDICAMENTOChanging(decimal value);
    partial void OnIDMEDICAMENTOChanged();
    partial void OnIDFARMACIAChanging(decimal value);
    partial void OnIDFARMACIAChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnCANTIDADChanging(decimal value);
    partial void OnCANTIDADChanged();
    partial void OnINSTRUCCIONESChanging(string value);
    partial void OnINSTRUCCIONESChanged();
    #endregion
		
		public LINEARECETA()
		{
			this._RECETA = default(EntityRef<RECETA>);
			this._MEDICAMENTOFARMACIA = default(EntityRef<MEDICAMENTOFARMACIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRECETA", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDRECETA
		{
			get
			{
				return this._IDRECETA;
			}
			set
			{
				if ((this._IDRECETA != value))
				{
					if (this._RECETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRECETAChanging(value);
					this.SendPropertyChanging();
					this._IDRECETA = value;
					this.SendPropertyChanged("IDRECETA");
					this.OnIDRECETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEA", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDLINEA
		{
			get
			{
				return this._IDLINEA;
			}
			set
			{
				if ((this._IDLINEA != value))
				{
					this.OnIDLINEAChanging(value);
					this.SendPropertyChanging();
					this._IDLINEA = value;
					this.SendPropertyChanged("IDLINEA");
					this.OnIDLINEAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMEDICAMENTO", DbType="Decimal(9,0) NOT NULL")]
		public decimal IDMEDICAMENTO
		{
			get
			{
				return this._IDMEDICAMENTO;
			}
			set
			{
				if ((this._IDMEDICAMENTO != value))
				{
					if (this._MEDICAMENTOFARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._IDMEDICAMENTO = value;
					this.SendPropertyChanged("IDMEDICAMENTO");
					this.OnIDMEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFARMACIA", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDFARMACIA
		{
			get
			{
				return this._IDFARMACIA;
			}
			set
			{
				if ((this._IDFARMACIA != value))
				{
					if (this._MEDICAMENTOFARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFARMACIAChanging(value);
					this.SendPropertyChanging();
					this._IDFARMACIA = value;
					this.SendPropertyChanged("IDFARMACIA");
					this.OnIDFARMACIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._MEDICAMENTOFARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD", DbType="Decimal(3,0) NOT NULL")]
		public decimal CANTIDAD
		{
			get
			{
				return this._CANTIDAD;
			}
			set
			{
				if ((this._CANTIDAD != value))
				{
					this.OnCANTIDADChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD = value;
					this.SendPropertyChanged("CANTIDAD");
					this.OnCANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTRUCCIONES", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string INSTRUCCIONES
		{
			get
			{
				return this._INSTRUCCIONES;
			}
			set
			{
				if ((this._INSTRUCCIONES != value))
				{
					this.OnINSTRUCCIONESChanging(value);
					this.SendPropertyChanging();
					this._INSTRUCCIONES = value;
					this.SendPropertyChanged("INSTRUCCIONES");
					this.OnINSTRUCCIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECETA_LINEARECETA", Storage="_RECETA", ThisKey="IDRECETA", OtherKey="IDRECETA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RECETA RECETA
		{
			get
			{
				return this._RECETA.Entity;
			}
			set
			{
				RECETA previousValue = this._RECETA.Entity;
				if (((previousValue != value) 
							|| (this._RECETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECETA.Entity = null;
						previousValue.LINEARECETAs.Remove(this);
					}
					this._RECETA.Entity = value;
					if ((value != null))
					{
						value.LINEARECETAs.Add(this);
						this._IDRECETA = value.IDRECETA;
					}
					else
					{
						this._IDRECETA = default(decimal);
					}
					this.SendPropertyChanged("RECETA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTOFARMACIA_LINEARECETA", Storage="_MEDICAMENTOFARMACIA", ThisKey="IDMEDICAMENTO,IDFARMACIA,IDSEDE", OtherKey="IDMEDICAMENTO,IDFARMACIA,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEDICAMENTOFARMACIA MEDICAMENTOFARMACIA
		{
			get
			{
				return this._MEDICAMENTOFARMACIA.Entity;
			}
			set
			{
				MEDICAMENTOFARMACIA previousValue = this._MEDICAMENTOFARMACIA.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTOFARMACIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTOFARMACIA.Entity = null;
						previousValue.LINEARECETAs.Remove(this);
					}
					this._MEDICAMENTOFARMACIA.Entity = value;
					if ((value != null))
					{
						value.LINEARECETAs.Add(this);
						this._IDMEDICAMENTO = value.IDMEDICAMENTO;
						this._IDFARMACIA = value.IDFARMACIA;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDMEDICAMENTO = default(decimal);
						this._IDFARMACIA = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("MEDICAMENTOFARMACIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.SIGNOVITALVALORACION")]
	public partial class SIGNOVITALVALORACION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CEDULAPACIENTE;
		
		private System.DateTime _FECHA;
		
		private char _TIPOSIGNOVITAL;
		
		private string _RESULTADO;
		
		private EntityRef<VALORACIONEMERGENCIA> _VALORACIONEMERGENCIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    partial void OnTIPOSIGNOVITALChanging(char value);
    partial void OnTIPOSIGNOVITALChanged();
    partial void OnRESULTADOChanging(string value);
    partial void OnRESULTADOChanged();
    #endregion
		
		public SIGNOVITALVALORACION()
		{
			this._VALORACIONEMERGENCIA = default(EntityRef<VALORACIONEMERGENCIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._VALORACIONEMERGENCIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					if (this._VALORACIONEMERGENCIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPOSIGNOVITAL", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char TIPOSIGNOVITAL
		{
			get
			{
				return this._TIPOSIGNOVITAL;
			}
			set
			{
				if ((this._TIPOSIGNOVITAL != value))
				{
					this.OnTIPOSIGNOVITALChanging(value);
					this.SendPropertyChanging();
					this._TIPOSIGNOVITAL = value;
					this.SendPropertyChanged("TIPOSIGNOVITAL");
					this.OnTIPOSIGNOVITALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULTADO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RESULTADO
		{
			get
			{
				return this._RESULTADO;
			}
			set
			{
				if ((this._RESULTADO != value))
				{
					this.OnRESULTADOChanging(value);
					this.SendPropertyChanging();
					this._RESULTADO = value;
					this.SendPropertyChanged("RESULTADO");
					this.OnRESULTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALORACIONEMERGENCIA_SIGNOVITALVALORACION", Storage="_VALORACIONEMERGENCIA", ThisKey="CEDULAPACIENTE,FECHA", OtherKey="CEDULAPACIENTE,FECHA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VALORACIONEMERGENCIA VALORACIONEMERGENCIA
		{
			get
			{
				return this._VALORACIONEMERGENCIA.Entity;
			}
			set
			{
				VALORACIONEMERGENCIA previousValue = this._VALORACIONEMERGENCIA.Entity;
				if (((previousValue != value) 
							|| (this._VALORACIONEMERGENCIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VALORACIONEMERGENCIA.Entity = null;
						previousValue.SIGNOVITALVALORACIONs.Remove(this);
					}
					this._VALORACIONEMERGENCIA.Entity = value;
					if ((value != null))
					{
						value.SIGNOVITALVALORACIONs.Add(this);
						this._CEDULAPACIENTE = value.CEDULAPACIENTE;
						this._FECHA = value.FECHA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
						this._FECHA = default(System.DateTime);
					}
					this.SendPropertyChanged("VALORACIONEMERGENCIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.PACIENTETELEFONO")]
	public partial class PACIENTETELEFONO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CEDULAPACIENTE;
		
		private decimal _TELEFONO;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    partial void OnTELEFONOChanging(decimal value);
    partial void OnTELEFONOChanged();
    #endregion
		
		public PACIENTETELEFONO()
		{
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal TELEFONO
		{
			get
			{
				return this._TELEFONO;
			}
			set
			{
				if ((this._TELEFONO != value))
				{
					this.OnTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO = value;
					this.SendPropertyChanged("TELEFONO");
					this.OnTELEFONOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_PACIENTETELEFONO", Storage="_PACIENTE", ThisKey="CEDULAPACIENTE", OtherKey="CEDULA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.PACIENTETELEFONOs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.PACIENTETELEFONOs.Add(this);
						this._CEDULAPACIENTE = value.CEDULA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.PACIENTE")]
	public partial class PACIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CEDULA;
		
		private string _NOMBRE;
		
		private string _APELLIDO;
		
		private System.DateTime _FCHNACIMIENTO;
		
		private char _ESTADOCIVIL;
		
		private string _OCUPACION;
		
		private string _FOTO;
		
		private string _DIRECCION;
		
		private char _TIPO;
		
		private EntitySet<CITA> _CITAs;
		
		private EntitySet<VALORACIONEMERGENCIA> _VALORACIONEMERGENCIAs;
		
		private EntitySet<PACIENTETELEFONO> _PACIENTETELEFONOs;
		
		private EntitySet<CONTACTORESPONSABLE> _CONTACTORESPONSABLEs;
		
		private EntitySet<CONTACTORESPONSABLE> _CONTACTORESPONSABLEs1;
		
		private EntitySet<ANTECEDENTEPACIENTE> _ANTECEDENTEPACIENTEs;
		
		private EntitySet<FACTURA> _FACTURAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAChanging(string value);
    partial void OnCEDULAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPELLIDOChanging(string value);
    partial void OnAPELLIDOChanged();
    partial void OnFCHNACIMIENTOChanging(System.DateTime value);
    partial void OnFCHNACIMIENTOChanged();
    partial void OnESTADOCIVILChanging(char value);
    partial void OnESTADOCIVILChanged();
    partial void OnOCUPACIONChanging(string value);
    partial void OnOCUPACIONChanged();
    partial void OnFOTOChanging(string value);
    partial void OnFOTOChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnTIPOChanging(char value);
    partial void OnTIPOChanged();
    #endregion
		
		public PACIENTE()
		{
			this._CITAs = new EntitySet<CITA>(new Action<CITA>(this.attach_CITAs), new Action<CITA>(this.detach_CITAs));
			this._VALORACIONEMERGENCIAs = new EntitySet<VALORACIONEMERGENCIA>(new Action<VALORACIONEMERGENCIA>(this.attach_VALORACIONEMERGENCIAs), new Action<VALORACIONEMERGENCIA>(this.detach_VALORACIONEMERGENCIAs));
			this._PACIENTETELEFONOs = new EntitySet<PACIENTETELEFONO>(new Action<PACIENTETELEFONO>(this.attach_PACIENTETELEFONOs), new Action<PACIENTETELEFONO>(this.detach_PACIENTETELEFONOs));
			this._CONTACTORESPONSABLEs = new EntitySet<CONTACTORESPONSABLE>(new Action<CONTACTORESPONSABLE>(this.attach_CONTACTORESPONSABLEs), new Action<CONTACTORESPONSABLE>(this.detach_CONTACTORESPONSABLEs));
			this._CONTACTORESPONSABLEs1 = new EntitySet<CONTACTORESPONSABLE>(new Action<CONTACTORESPONSABLE>(this.attach_CONTACTORESPONSABLEs1), new Action<CONTACTORESPONSABLE>(this.detach_CONTACTORESPONSABLEs1));
			this._ANTECEDENTEPACIENTEs = new EntitySet<ANTECEDENTEPACIENTE>(new Action<ANTECEDENTEPACIENTE>(this.attach_ANTECEDENTEPACIENTEs), new Action<ANTECEDENTEPACIENTE>(this.detach_ANTECEDENTEPACIENTEs));
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULA", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CEDULA
		{
			get
			{
				return this._CEDULA;
			}
			set
			{
				if ((this._CEDULA != value))
				{
					this.OnCEDULAChanging(value);
					this.SendPropertyChanging();
					this._CEDULA = value;
					this.SendPropertyChanged("CEDULA");
					this.OnCEDULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string APELLIDO
		{
			get
			{
				return this._APELLIDO;
			}
			set
			{
				if ((this._APELLIDO != value))
				{
					this.OnAPELLIDOChanging(value);
					this.SendPropertyChanging();
					this._APELLIDO = value;
					this.SendPropertyChanged("APELLIDO");
					this.OnAPELLIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FCHNACIMIENTO", DbType="Date NOT NULL")]
		public System.DateTime FCHNACIMIENTO
		{
			get
			{
				return this._FCHNACIMIENTO;
			}
			set
			{
				if ((this._FCHNACIMIENTO != value))
				{
					this.OnFCHNACIMIENTOChanging(value);
					this.SendPropertyChanging();
					this._FCHNACIMIENTO = value;
					this.SendPropertyChanged("FCHNACIMIENTO");
					this.OnFCHNACIMIENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOCIVIL", DbType="Char(1) NOT NULL")]
		public char ESTADOCIVIL
		{
			get
			{
				return this._ESTADOCIVIL;
			}
			set
			{
				if ((this._ESTADOCIVIL != value))
				{
					this.OnESTADOCIVILChanging(value);
					this.SendPropertyChanging();
					this._ESTADOCIVIL = value;
					this.SendPropertyChanged("ESTADOCIVIL");
					this.OnESTADOCIVILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OCUPACION", DbType="VarChar(20)")]
		public string OCUPACION
		{
			get
			{
				return this._OCUPACION;
			}
			set
			{
				if ((this._OCUPACION != value))
				{
					this.OnOCUPACIONChanging(value);
					this.SendPropertyChanging();
					this._OCUPACION = value;
					this.SendPropertyChanged("OCUPACION");
					this.OnOCUPACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOTO", DbType="VarChar(20)")]
		public string FOTO
		{
			get
			{
				return this._FOTO;
			}
			set
			{
				if ((this._FOTO != value))
				{
					this.OnFOTOChanging(value);
					this.SendPropertyChanging();
					this._FOTO = value;
					this.SendPropertyChanged("FOTO");
					this.OnFOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="Char(1) NOT NULL")]
		public char TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CITA", Storage="_CITAs", ThisKey="CEDULA", OtherKey="CEDULAPACIENTE")]
		public EntitySet<CITA> CITAs
		{
			get
			{
				return this._CITAs;
			}
			set
			{
				this._CITAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_VALORACIONEMERGENCIA", Storage="_VALORACIONEMERGENCIAs", ThisKey="CEDULA", OtherKey="CEDULAPACIENTE")]
		public EntitySet<VALORACIONEMERGENCIA> VALORACIONEMERGENCIAs
		{
			get
			{
				return this._VALORACIONEMERGENCIAs;
			}
			set
			{
				this._VALORACIONEMERGENCIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_PACIENTETELEFONO", Storage="_PACIENTETELEFONOs", ThisKey="CEDULA", OtherKey="CEDULAPACIENTE")]
		public EntitySet<PACIENTETELEFONO> PACIENTETELEFONOs
		{
			get
			{
				return this._PACIENTETELEFONOs;
			}
			set
			{
				this._PACIENTETELEFONOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CONTACTORESPONSABLE", Storage="_CONTACTORESPONSABLEs", ThisKey="CEDULA", OtherKey="PACIENTEMENOR")]
		public EntitySet<CONTACTORESPONSABLE> CONTACTORESPONSABLEs
		{
			get
			{
				return this._CONTACTORESPONSABLEs;
			}
			set
			{
				this._CONTACTORESPONSABLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CONTACTORESPONSABLE1", Storage="_CONTACTORESPONSABLEs1", ThisKey="CEDULA", OtherKey="RESPONSABLE")]
		public EntitySet<CONTACTORESPONSABLE> CONTACTORESPONSABLEs1
		{
			get
			{
				return this._CONTACTORESPONSABLEs1;
			}
			set
			{
				this._CONTACTORESPONSABLEs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_ANTECEDENTEPACIENTE", Storage="_ANTECEDENTEPACIENTEs", ThisKey="CEDULA", OtherKey="CEDULAPACIENTE")]
		public EntitySet<ANTECEDENTEPACIENTE> ANTECEDENTEPACIENTEs
		{
			get
			{
				return this._ANTECEDENTEPACIENTEs;
			}
			set
			{
				this._ANTECEDENTEPACIENTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_FACTURA", Storage="_FACTURAs", ThisKey="CEDULA", OtherKey="CEDULAPACIENTE")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_VALORACIONEMERGENCIAs(VALORACIONEMERGENCIA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_VALORACIONEMERGENCIAs(VALORACIONEMERGENCIA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_PACIENTETELEFONOs(PACIENTETELEFONO entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_PACIENTETELEFONOs(PACIENTETELEFONO entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_CONTACTORESPONSABLEs(CONTACTORESPONSABLE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_CONTACTORESPONSABLEs(CONTACTORESPONSABLE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_CONTACTORESPONSABLEs1(CONTACTORESPONSABLE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE1 = this;
		}
		
		private void detach_CONTACTORESPONSABLEs1(CONTACTORESPONSABLE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE1 = null;
		}
		
		private void attach_ANTECEDENTEPACIENTEs(ANTECEDENTEPACIENTE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_ANTECEDENTEPACIENTEs(ANTECEDENTEPACIENTE entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.CONTACTORESPONSABLE")]
	public partial class CONTACTORESPONSABLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PACIENTEMENOR;
		
		private string _RESPONSABLE;
		
		private char _TIPO;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
		private EntityRef<PACIENTE> _PACIENTE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPACIENTEMENORChanging(string value);
    partial void OnPACIENTEMENORChanged();
    partial void OnRESPONSABLEChanging(string value);
    partial void OnRESPONSABLEChanged();
    partial void OnTIPOChanging(char value);
    partial void OnTIPOChanged();
    #endregion
		
		public CONTACTORESPONSABLE()
		{
			this._PACIENTE = default(EntityRef<PACIENTE>);
			this._PACIENTE1 = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACIENTEMENOR", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PACIENTEMENOR
		{
			get
			{
				return this._PACIENTEMENOR;
			}
			set
			{
				if ((this._PACIENTEMENOR != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPACIENTEMENORChanging(value);
					this.SendPropertyChanging();
					this._PACIENTEMENOR = value;
					this.SendPropertyChanged("PACIENTEMENOR");
					this.OnPACIENTEMENORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESPONSABLE", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RESPONSABLE
		{
			get
			{
				return this._RESPONSABLE;
			}
			set
			{
				if ((this._RESPONSABLE != value))
				{
					if (this._PACIENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRESPONSABLEChanging(value);
					this.SendPropertyChanging();
					this._RESPONSABLE = value;
					this.SendPropertyChanged("RESPONSABLE");
					this.OnRESPONSABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="Char(1) NOT NULL")]
		public char TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CONTACTORESPONSABLE", Storage="_PACIENTE", ThisKey="PACIENTEMENOR", OtherKey="CEDULA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.CONTACTORESPONSABLEs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.CONTACTORESPONSABLEs.Add(this);
						this._PACIENTEMENOR = value.CEDULA;
					}
					else
					{
						this._PACIENTEMENOR = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CONTACTORESPONSABLE1", Storage="_PACIENTE1", ThisKey="RESPONSABLE", OtherKey="CEDULA", IsForeignKey=true)]
		public PACIENTE PACIENTE1
		{
			get
			{
				return this._PACIENTE1.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE1.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE1.Entity = null;
						previousValue.CONTACTORESPONSABLEs1.Remove(this);
					}
					this._PACIENTE1.Entity = value;
					if ((value != null))
					{
						value.CONTACTORESPONSABLEs1.Add(this);
						this._RESPONSABLE = value.CEDULA;
					}
					else
					{
						this._RESPONSABLE = default(string);
					}
					this.SendPropertyChanged("PACIENTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.ANTECEDENTEPACIENTE")]
	public partial class ANTECEDENTEPACIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CEDULAPACIENTE;
		
		private decimal _IDANTECEDENTE;
		
		private string _OBSERVACION;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
		private EntityRef<ANTECEDENTE> _ANTECEDENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    partial void OnIDANTECEDENTEChanging(decimal value);
    partial void OnIDANTECEDENTEChanged();
    partial void OnOBSERVACIONChanging(string value);
    partial void OnOBSERVACIONChanged();
    #endregion
		
		public ANTECEDENTEPACIENTE()
		{
			this._PACIENTE = default(EntityRef<PACIENTE>);
			this._ANTECEDENTE = default(EntityRef<ANTECEDENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDANTECEDENTE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDANTECEDENTE
		{
			get
			{
				return this._IDANTECEDENTE;
			}
			set
			{
				if ((this._IDANTECEDENTE != value))
				{
					if (this._ANTECEDENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDANTECEDENTEChanging(value);
					this.SendPropertyChanging();
					this._IDANTECEDENTE = value;
					this.SendPropertyChanged("IDANTECEDENTE");
					this.OnIDANTECEDENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACION", DbType="VarChar(80)")]
		public string OBSERVACION
		{
			get
			{
				return this._OBSERVACION;
			}
			set
			{
				if ((this._OBSERVACION != value))
				{
					this.OnOBSERVACIONChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACION = value;
					this.SendPropertyChanged("OBSERVACION");
					this.OnOBSERVACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_ANTECEDENTEPACIENTE", Storage="_PACIENTE", ThisKey="CEDULAPACIENTE", OtherKey="CEDULA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.ANTECEDENTEPACIENTEs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.ANTECEDENTEPACIENTEs.Add(this);
						this._CEDULAPACIENTE = value.CEDULA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ANTECEDENTE_ANTECEDENTEPACIENTE", Storage="_ANTECEDENTE", ThisKey="IDANTECEDENTE", OtherKey="IDANTECEDENTE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ANTECEDENTE ANTECEDENTE
		{
			get
			{
				return this._ANTECEDENTE.Entity;
			}
			set
			{
				ANTECEDENTE previousValue = this._ANTECEDENTE.Entity;
				if (((previousValue != value) 
							|| (this._ANTECEDENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ANTECEDENTE.Entity = null;
						previousValue.ANTECEDENTEPACIENTEs.Remove(this);
					}
					this._ANTECEDENTE.Entity = value;
					if ((value != null))
					{
						value.ANTECEDENTEPACIENTEs.Add(this);
						this._IDANTECEDENTE = value.IDANTECEDENTE;
					}
					else
					{
						this._IDANTECEDENTE = default(decimal);
					}
					this.SendPropertyChanged("ANTECEDENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PACIENTE.ANTECEDENTE")]
	public partial class ANTECEDENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDANTECEDENTE;
		
		private string _NOMBRE;
		
		private EntitySet<ANTECEDENTEPACIENTE> _ANTECEDENTEPACIENTEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDANTECEDENTEChanging(decimal value);
    partial void OnIDANTECEDENTEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public ANTECEDENTE()
		{
			this._ANTECEDENTEPACIENTEs = new EntitySet<ANTECEDENTEPACIENTE>(new Action<ANTECEDENTEPACIENTE>(this.attach_ANTECEDENTEPACIENTEs), new Action<ANTECEDENTEPACIENTE>(this.detach_ANTECEDENTEPACIENTEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDANTECEDENTE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDANTECEDENTE
		{
			get
			{
				return this._IDANTECEDENTE;
			}
			set
			{
				if ((this._IDANTECEDENTE != value))
				{
					this.OnIDANTECEDENTEChanging(value);
					this.SendPropertyChanging();
					this._IDANTECEDENTE = value;
					this.SendPropertyChanged("IDANTECEDENTE");
					this.OnIDANTECEDENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ANTECEDENTE_ANTECEDENTEPACIENTE", Storage="_ANTECEDENTEPACIENTEs", ThisKey="IDANTECEDENTE", OtherKey="IDANTECEDENTE")]
		public EntitySet<ANTECEDENTEPACIENTE> ANTECEDENTEPACIENTEs
		{
			get
			{
				return this._ANTECEDENTEPACIENTEs;
			}
			set
			{
				this._ANTECEDENTEPACIENTEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANTECEDENTEPACIENTEs(ANTECEDENTEPACIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ANTECEDENTE = this;
		}
		
		private void detach_ANTECEDENTEPACIENTEs(ANTECEDENTEPACIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ANTECEDENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.TIPOLABORATORIO")]
	public partial class TIPOLABORATORIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDTIPO;
		
		private string _NOMBRE;
		
		private EntitySet<LABORATORIO> _LABORATORIOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOChanging(decimal value);
    partial void OnIDTIPOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public TIPOLABORATORIO()
		{
			this._LABORATORIOs = new EntitySet<LABORATORIO>(new Action<LABORATORIO>(this.attach_LABORATORIOs), new Action<LABORATORIO>(this.detach_LABORATORIOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPO", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDTIPO
		{
			get
			{
				return this._IDTIPO;
			}
			set
			{
				if ((this._IDTIPO != value))
				{
					this.OnIDTIPOChanging(value);
					this.SendPropertyChanging();
					this._IDTIPO = value;
					this.SendPropertyChanged("IDTIPO");
					this.OnIDTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLABORATORIO_LABORATORIO", Storage="_LABORATORIOs", ThisKey="IDTIPO", OtherKey="TIPO")]
		public EntitySet<LABORATORIO> LABORATORIOs
		{
			get
			{
				return this._LABORATORIOs;
			}
			set
			{
				this._LABORATORIOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LABORATORIOs(LABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLABORATORIO = this;
		}
		
		private void detach_LABORATORIOs(LABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLABORATORIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.SOLICITUDEXAMEN")]
	public partial class SOLICITUDEXAMEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDSOLICITUD;
		
		private decimal _IDLABORATORIO;
		
		private decimal _IDEXAMEN;
		
		private decimal _IDCITA;
		
		private System.DateTime _FCHSOLICITUD;
		
		private System.Nullable<System.DateTime> _FCHAPLICACION;
		
		private System.Nullable<System.DateTime> _FCHRESULTADO;
		
		private string _OBSERVACIONES;
		
		private decimal _IDFACTURA;
		
		private EntitySet<ITEMSOLICITUD> _ITEMSOLICITUDs;
		
		private EntityRef<CITA> _CITA;
		
		private EntityRef<EXAMENLABORATORIO> _EXAMENLABORATORIO;
		
		private EntityRef<FACTURA> _FACTURA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSOLICITUDChanging(decimal value);
    partial void OnIDSOLICITUDChanged();
    partial void OnIDLABORATORIOChanging(decimal value);
    partial void OnIDLABORATORIOChanged();
    partial void OnIDEXAMENChanging(decimal value);
    partial void OnIDEXAMENChanged();
    partial void OnIDCITAChanging(decimal value);
    partial void OnIDCITAChanged();
    partial void OnFCHSOLICITUDChanging(System.DateTime value);
    partial void OnFCHSOLICITUDChanged();
    partial void OnFCHAPLICACIONChanging(System.Nullable<System.DateTime> value);
    partial void OnFCHAPLICACIONChanged();
    partial void OnFCHRESULTADOChanging(System.Nullable<System.DateTime> value);
    partial void OnFCHRESULTADOChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    partial void OnIDFACTURAChanging(decimal value);
    partial void OnIDFACTURAChanged();
    #endregion
		
		public SOLICITUDEXAMEN()
		{
			this._ITEMSOLICITUDs = new EntitySet<ITEMSOLICITUD>(new Action<ITEMSOLICITUD>(this.attach_ITEMSOLICITUDs), new Action<ITEMSOLICITUD>(this.detach_ITEMSOLICITUDs));
			this._CITA = default(EntityRef<CITA>);
			this._EXAMENLABORATORIO = default(EntityRef<EXAMENLABORATORIO>);
			this._FACTURA = default(EntityRef<FACTURA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSOLICITUD", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSOLICITUD
		{
			get
			{
				return this._IDSOLICITUD;
			}
			set
			{
				if ((this._IDSOLICITUD != value))
				{
					this.OnIDSOLICITUDChanging(value);
					this.SendPropertyChanging();
					this._IDSOLICITUD = value;
					this.SendPropertyChanged("IDSOLICITUD");
					this.OnIDSOLICITUDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLABORATORIO", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDLABORATORIO
		{
			get
			{
				return this._IDLABORATORIO;
			}
			set
			{
				if ((this._IDLABORATORIO != value))
				{
					if (this._EXAMENLABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLABORATORIOChanging(value);
					this.SendPropertyChanging();
					this._IDLABORATORIO = value;
					this.SendPropertyChanged("IDLABORATORIO");
					this.OnIDLABORATORIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEXAMEN", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDEXAMEN
		{
			get
			{
				return this._IDEXAMEN;
			}
			set
			{
				if ((this._IDEXAMEN != value))
				{
					if (this._EXAMENLABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEXAMENChanging(value);
					this.SendPropertyChanging();
					this._IDEXAMEN = value;
					this.SendPropertyChanged("IDEXAMEN");
					this.OnIDEXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Decimal(20,0) NOT NULL")]
		public decimal IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					if (this._CITA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FCHSOLICITUD", DbType="Date NOT NULL")]
		public System.DateTime FCHSOLICITUD
		{
			get
			{
				return this._FCHSOLICITUD;
			}
			set
			{
				if ((this._FCHSOLICITUD != value))
				{
					this.OnFCHSOLICITUDChanging(value);
					this.SendPropertyChanging();
					this._FCHSOLICITUD = value;
					this.SendPropertyChanged("FCHSOLICITUD");
					this.OnFCHSOLICITUDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FCHAPLICACION", DbType="Date")]
		public System.Nullable<System.DateTime> FCHAPLICACION
		{
			get
			{
				return this._FCHAPLICACION;
			}
			set
			{
				if ((this._FCHAPLICACION != value))
				{
					this.OnFCHAPLICACIONChanging(value);
					this.SendPropertyChanging();
					this._FCHAPLICACION = value;
					this.SendPropertyChanged("FCHAPLICACION");
					this.OnFCHAPLICACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FCHRESULTADO", DbType="Date")]
		public System.Nullable<System.DateTime> FCHRESULTADO
		{
			get
			{
				return this._FCHRESULTADO;
			}
			set
			{
				if ((this._FCHRESULTADO != value))
				{
					this.OnFCHRESULTADOChanging(value);
					this.SendPropertyChanging();
					this._FCHRESULTADO = value;
					this.SendPropertyChanged("FCHRESULTADO");
					this.OnFCHRESULTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(99)")]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFACTURA", DbType="Decimal(20,0) NOT NULL")]
		public decimal IDFACTURA
		{
			get
			{
				return this._IDFACTURA;
			}
			set
			{
				if ((this._IDFACTURA != value))
				{
					if (this._FACTURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFACTURAChanging(value);
					this.SendPropertyChanging();
					this._IDFACTURA = value;
					this.SendPropertyChanged("IDFACTURA");
					this.OnIDFACTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOLICITUDEXAMEN_ITEMSOLICITUD", Storage="_ITEMSOLICITUDs", ThisKey="IDSOLICITUD", OtherKey="IDSOLICITUD")]
		public EntitySet<ITEMSOLICITUD> ITEMSOLICITUDs
		{
			get
			{
				return this._ITEMSOLICITUDs;
			}
			set
			{
				this._ITEMSOLICITUDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITA_SOLICITUDEXAMEN", Storage="_CITA", ThisKey="IDCITA", OtherKey="IDCITA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CITA CITA
		{
			get
			{
				return this._CITA.Entity;
			}
			set
			{
				CITA previousValue = this._CITA.Entity;
				if (((previousValue != value) 
							|| (this._CITA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITA.Entity = null;
						previousValue.SOLICITUDEXAMENs.Remove(this);
					}
					this._CITA.Entity = value;
					if ((value != null))
					{
						value.SOLICITUDEXAMENs.Add(this);
						this._IDCITA = value.IDCITA;
					}
					else
					{
						this._IDCITA = default(decimal);
					}
					this.SendPropertyChanged("CITA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMENLABORATORIO_SOLICITUDEXAMEN", Storage="_EXAMENLABORATORIO", ThisKey="IDEXAMEN,IDLABORATORIO", OtherKey="IDEXAMEN,IDLABORATORIO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EXAMENLABORATORIO EXAMENLABORATORIO
		{
			get
			{
				return this._EXAMENLABORATORIO.Entity;
			}
			set
			{
				EXAMENLABORATORIO previousValue = this._EXAMENLABORATORIO.Entity;
				if (((previousValue != value) 
							|| (this._EXAMENLABORATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EXAMENLABORATORIO.Entity = null;
						previousValue.SOLICITUDEXAMENs.Remove(this);
					}
					this._EXAMENLABORATORIO.Entity = value;
					if ((value != null))
					{
						value.SOLICITUDEXAMENs.Add(this);
						this._IDEXAMEN = value.IDEXAMEN;
						this._IDLABORATORIO = value.IDLABORATORIO;
					}
					else
					{
						this._IDEXAMEN = default(decimal);
						this._IDLABORATORIO = default(decimal);
					}
					this.SendPropertyChanged("EXAMENLABORATORIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_SOLICITUDEXAMEN", Storage="_FACTURA", ThisKey="IDFACTURA", OtherKey="IDFACTURA", IsForeignKey=true)]
		public FACTURA FACTURA
		{
			get
			{
				return this._FACTURA.Entity;
			}
			set
			{
				FACTURA previousValue = this._FACTURA.Entity;
				if (((previousValue != value) 
							|| (this._FACTURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURA.Entity = null;
						previousValue.SOLICITUDEXAMENs.Remove(this);
					}
					this._FACTURA.Entity = value;
					if ((value != null))
					{
						value.SOLICITUDEXAMENs.Add(this);
						this._IDFACTURA = value.IDFACTURA;
					}
					else
					{
						this._IDFACTURA = default(decimal);
					}
					this.SendPropertyChanged("FACTURA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ITEMSOLICITUDs(ITEMSOLICITUD entity)
		{
			this.SendPropertyChanging();
			entity.SOLICITUDEXAMEN = this;
		}
		
		private void detach_ITEMSOLICITUDs(ITEMSOLICITUD entity)
		{
			this.SendPropertyChanging();
			entity.SOLICITUDEXAMEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.LABORATORIO")]
	public partial class LABORATORIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDLABORATORIO;
		
		private decimal _IDSEDE;
		
		private decimal _TIPO;
		
		private EntitySet<ENCARGADOLAB> _ENCARGADOLABs;
		
		private EntitySet<EXAMENLABORATORIO> _EXAMENLABORATORIOs;
		
		private EntityRef<SEDE> _SEDE;
		
		private EntityRef<TIPOLABORATORIO> _TIPOLABORATORIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLABORATORIOChanging(decimal value);
    partial void OnIDLABORATORIOChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnTIPOChanging(decimal value);
    partial void OnTIPOChanged();
    #endregion
		
		public LABORATORIO()
		{
			this._ENCARGADOLABs = new EntitySet<ENCARGADOLAB>(new Action<ENCARGADOLAB>(this.attach_ENCARGADOLABs), new Action<ENCARGADOLAB>(this.detach_ENCARGADOLABs));
			this._EXAMENLABORATORIOs = new EntitySet<EXAMENLABORATORIO>(new Action<EXAMENLABORATORIO>(this.attach_EXAMENLABORATORIOs), new Action<EXAMENLABORATORIO>(this.detach_EXAMENLABORATORIOs));
			this._SEDE = default(EntityRef<SEDE>);
			this._TIPOLABORATORIO = default(EntityRef<TIPOLABORATORIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLABORATORIO", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDLABORATORIO
		{
			get
			{
				return this._IDLABORATORIO;
			}
			set
			{
				if ((this._IDLABORATORIO != value))
				{
					this.OnIDLABORATORIOChanging(value);
					this.SendPropertyChanging();
					this._IDLABORATORIO = value;
					this.SendPropertyChanged("IDLABORATORIO");
					this.OnIDLABORATORIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._SEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="Decimal(4,0) NOT NULL")]
		public decimal TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					if (this._TIPOLABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_ENCARGADOLAB", Storage="_ENCARGADOLABs", ThisKey="IDLABORATORIO", OtherKey="IDLABORATORIO")]
		public EntitySet<ENCARGADOLAB> ENCARGADOLABs
		{
			get
			{
				return this._ENCARGADOLABs;
			}
			set
			{
				this._ENCARGADOLABs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_EXAMENLABORATORIO", Storage="_EXAMENLABORATORIOs", ThisKey="IDLABORATORIO", OtherKey="IDLABORATORIO")]
		public EntitySet<EXAMENLABORATORIO> EXAMENLABORATORIOs
		{
			get
			{
				return this._EXAMENLABORATORIOs;
			}
			set
			{
				this._EXAMENLABORATORIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_LABORATORIO", Storage="_SEDE", ThisKey="IDSEDE", OtherKey="IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SEDE SEDE
		{
			get
			{
				return this._SEDE.Entity;
			}
			set
			{
				SEDE previousValue = this._SEDE.Entity;
				if (((previousValue != value) 
							|| (this._SEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEDE.Entity = null;
						previousValue.LABORATORIOs.Remove(this);
					}
					this._SEDE.Entity = value;
					if ((value != null))
					{
						value.LABORATORIOs.Add(this);
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("SEDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLABORATORIO_LABORATORIO", Storage="_TIPOLABORATORIO", ThisKey="TIPO", OtherKey="IDTIPO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TIPOLABORATORIO TIPOLABORATORIO
		{
			get
			{
				return this._TIPOLABORATORIO.Entity;
			}
			set
			{
				TIPOLABORATORIO previousValue = this._TIPOLABORATORIO.Entity;
				if (((previousValue != value) 
							|| (this._TIPOLABORATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOLABORATORIO.Entity = null;
						previousValue.LABORATORIOs.Remove(this);
					}
					this._TIPOLABORATORIO.Entity = value;
					if ((value != null))
					{
						value.LABORATORIOs.Add(this);
						this._TIPO = value.IDTIPO;
					}
					else
					{
						this._TIPO = default(decimal);
					}
					this.SendPropertyChanged("TIPOLABORATORIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ENCARGADOLABs(ENCARGADOLAB entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = this;
		}
		
		private void detach_ENCARGADOLABs(ENCARGADOLAB entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = null;
		}
		
		private void attach_EXAMENLABORATORIOs(EXAMENLABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = this;
		}
		
		private void detach_EXAMENLABORATORIOs(EXAMENLABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.ITEMSOLICITUD")]
	public partial class ITEMSOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _EXAMEN;
		
		private decimal _ITEM;
		
		private decimal _IDSOLICITUD;
		
		private string _RESULTADO;
		
		private string _OBSERVACIONES;
		
		private EntityRef<SOLICITUDEXAMEN> _SOLICITUDEXAMEN;
		
		private EntityRef<ITEM> _ITEM1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEXAMENChanging(decimal value);
    partial void OnEXAMENChanged();
    partial void OnITEMChanging(decimal value);
    partial void OnITEMChanged();
    partial void OnIDSOLICITUDChanging(decimal value);
    partial void OnIDSOLICITUDChanged();
    partial void OnRESULTADOChanging(string value);
    partial void OnRESULTADOChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    #endregion
		
		public ITEMSOLICITUD()
		{
			this._SOLICITUDEXAMEN = default(EntityRef<SOLICITUDEXAMEN>);
			this._ITEM1 = default(EntityRef<ITEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXAMEN", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal EXAMEN
		{
			get
			{
				return this._EXAMEN;
			}
			set
			{
				if ((this._EXAMEN != value))
				{
					if (this._ITEM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEXAMENChanging(value);
					this.SendPropertyChanging();
					this._EXAMEN = value;
					this.SendPropertyChanged("EXAMEN");
					this.OnEXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ITEM
		{
			get
			{
				return this._ITEM;
			}
			set
			{
				if ((this._ITEM != value))
				{
					if (this._ITEM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITEMChanging(value);
					this.SendPropertyChanging();
					this._ITEM = value;
					this.SendPropertyChanged("ITEM");
					this.OnITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSOLICITUD", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSOLICITUD
		{
			get
			{
				return this._IDSOLICITUD;
			}
			set
			{
				if ((this._IDSOLICITUD != value))
				{
					if (this._SOLICITUDEXAMEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSOLICITUDChanging(value);
					this.SendPropertyChanging();
					this._IDSOLICITUD = value;
					this.SendPropertyChanged("IDSOLICITUD");
					this.OnIDSOLICITUDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULTADO", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string RESULTADO
		{
			get
			{
				return this._RESULTADO;
			}
			set
			{
				if ((this._RESULTADO != value))
				{
					this.OnRESULTADOChanging(value);
					this.SendPropertyChanging();
					this._RESULTADO = value;
					this.SendPropertyChanged("RESULTADO");
					this.OnRESULTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="VarChar(60)")]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOLICITUDEXAMEN_ITEMSOLICITUD", Storage="_SOLICITUDEXAMEN", ThisKey="IDSOLICITUD", OtherKey="IDSOLICITUD", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SOLICITUDEXAMEN SOLICITUDEXAMEN
		{
			get
			{
				return this._SOLICITUDEXAMEN.Entity;
			}
			set
			{
				SOLICITUDEXAMEN previousValue = this._SOLICITUDEXAMEN.Entity;
				if (((previousValue != value) 
							|| (this._SOLICITUDEXAMEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOLICITUDEXAMEN.Entity = null;
						previousValue.ITEMSOLICITUDs.Remove(this);
					}
					this._SOLICITUDEXAMEN.Entity = value;
					if ((value != null))
					{
						value.ITEMSOLICITUDs.Add(this);
						this._IDSOLICITUD = value.IDSOLICITUD;
					}
					else
					{
						this._IDSOLICITUD = default(decimal);
					}
					this.SendPropertyChanged("SOLICITUDEXAMEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ITEMSOLICITUD", Storage="_ITEM1", ThisKey="EXAMEN,ITEM", OtherKey="IDEXAMEN,IDITEM", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ITEM ITEM1
		{
			get
			{
				return this._ITEM1.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM1.Entity;
				if (((previousValue != value) 
							|| (this._ITEM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM1.Entity = null;
						previousValue.ITEMSOLICITUDs.Remove(this);
					}
					this._ITEM1.Entity = value;
					if ((value != null))
					{
						value.ITEMSOLICITUDs.Add(this);
						this._EXAMEN = value.IDEXAMEN;
						this._ITEM = value.IDITEM;
					}
					else
					{
						this._EXAMEN = default(decimal);
						this._ITEM = default(decimal);
					}
					this.SendPropertyChanged("ITEM1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.ITEM")]
	public partial class ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEXAMEN;
		
		private decimal _IDITEM;
		
		private string _NOMBRE;
		
		private string _EXPRESIONREGULAR;
		
		private EntitySet<ITEMSOLICITUD> _ITEMSOLICITUDs;
		
		private EntityRef<EXAMEN> _EXAMEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEXAMENChanging(decimal value);
    partial void OnIDEXAMENChanged();
    partial void OnIDITEMChanging(decimal value);
    partial void OnIDITEMChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnEXPRESIONREGULARChanging(string value);
    partial void OnEXPRESIONREGULARChanged();
    #endregion
		
		public ITEM()
		{
			this._ITEMSOLICITUDs = new EntitySet<ITEMSOLICITUD>(new Action<ITEMSOLICITUD>(this.attach_ITEMSOLICITUDs), new Action<ITEMSOLICITUD>(this.detach_ITEMSOLICITUDs));
			this._EXAMEN = default(EntityRef<EXAMEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEXAMEN", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEXAMEN
		{
			get
			{
				return this._IDEXAMEN;
			}
			set
			{
				if ((this._IDEXAMEN != value))
				{
					if (this._EXAMEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEXAMENChanging(value);
					this.SendPropertyChanging();
					this._IDEXAMEN = value;
					this.SendPropertyChanged("IDEXAMEN");
					this.OnIDEXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDITEM", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDITEM
		{
			get
			{
				return this._IDITEM;
			}
			set
			{
				if ((this._IDITEM != value))
				{
					this.OnIDITEMChanging(value);
					this.SendPropertyChanging();
					this._IDITEM = value;
					this.SendPropertyChanged("IDITEM");
					this.OnIDITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPRESIONREGULAR", DbType="VarChar(60)")]
		public string EXPRESIONREGULAR
		{
			get
			{
				return this._EXPRESIONREGULAR;
			}
			set
			{
				if ((this._EXPRESIONREGULAR != value))
				{
					this.OnEXPRESIONREGULARChanging(value);
					this.SendPropertyChanging();
					this._EXPRESIONREGULAR = value;
					this.SendPropertyChanged("EXPRESIONREGULAR");
					this.OnEXPRESIONREGULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ITEMSOLICITUD", Storage="_ITEMSOLICITUDs", ThisKey="IDEXAMEN,IDITEM", OtherKey="EXAMEN,ITEM")]
		public EntitySet<ITEMSOLICITUD> ITEMSOLICITUDs
		{
			get
			{
				return this._ITEMSOLICITUDs;
			}
			set
			{
				this._ITEMSOLICITUDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMEN_ITEM", Storage="_EXAMEN", ThisKey="IDEXAMEN", OtherKey="IDEXAMEN", IsForeignKey=true)]
		public EXAMEN EXAMEN
		{
			get
			{
				return this._EXAMEN.Entity;
			}
			set
			{
				EXAMEN previousValue = this._EXAMEN.Entity;
				if (((previousValue != value) 
							|| (this._EXAMEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EXAMEN.Entity = null;
						previousValue.ITEMs.Remove(this);
					}
					this._EXAMEN.Entity = value;
					if ((value != null))
					{
						value.ITEMs.Add(this);
						this._IDEXAMEN = value.IDEXAMEN;
					}
					else
					{
						this._IDEXAMEN = default(decimal);
					}
					this.SendPropertyChanged("EXAMEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ITEMSOLICITUDs(ITEMSOLICITUD entity)
		{
			this.SendPropertyChanging();
			entity.ITEM1 = this;
		}
		
		private void detach_ITEMSOLICITUDs(ITEMSOLICITUD entity)
		{
			this.SendPropertyChanging();
			entity.ITEM1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.EXAMENLABORATORIO")]
	public partial class EXAMENLABORATORIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEXAMEN;
		
		private decimal _IDLABORATORIO;
		
		private decimal _COSTOHONORARIO;
		
		private decimal _COSTOEQUIPO;
		
		private EntitySet<SOLICITUDEXAMEN> _SOLICITUDEXAMENs;
		
		private EntityRef<LABORATORIO> _LABORATORIO;
		
		private EntityRef<EXAMEN> _EXAMEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEXAMENChanging(decimal value);
    partial void OnIDEXAMENChanged();
    partial void OnIDLABORATORIOChanging(decimal value);
    partial void OnIDLABORATORIOChanged();
    partial void OnCOSTOHONORARIOChanging(decimal value);
    partial void OnCOSTOHONORARIOChanged();
    partial void OnCOSTOEQUIPOChanging(decimal value);
    partial void OnCOSTOEQUIPOChanged();
    #endregion
		
		public EXAMENLABORATORIO()
		{
			this._SOLICITUDEXAMENs = new EntitySet<SOLICITUDEXAMEN>(new Action<SOLICITUDEXAMEN>(this.attach_SOLICITUDEXAMENs), new Action<SOLICITUDEXAMEN>(this.detach_SOLICITUDEXAMENs));
			this._LABORATORIO = default(EntityRef<LABORATORIO>);
			this._EXAMEN = default(EntityRef<EXAMEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEXAMEN", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEXAMEN
		{
			get
			{
				return this._IDEXAMEN;
			}
			set
			{
				if ((this._IDEXAMEN != value))
				{
					if (this._EXAMEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEXAMENChanging(value);
					this.SendPropertyChanging();
					this._IDEXAMEN = value;
					this.SendPropertyChanged("IDEXAMEN");
					this.OnIDEXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLABORATORIO", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDLABORATORIO
		{
			get
			{
				return this._IDLABORATORIO;
			}
			set
			{
				if ((this._IDLABORATORIO != value))
				{
					if (this._LABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLABORATORIOChanging(value);
					this.SendPropertyChanging();
					this._IDLABORATORIO = value;
					this.SendPropertyChanged("IDLABORATORIO");
					this.OnIDLABORATORIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COSTOHONORARIO", DbType="Decimal(7,2) NOT NULL")]
		public decimal COSTOHONORARIO
		{
			get
			{
				return this._COSTOHONORARIO;
			}
			set
			{
				if ((this._COSTOHONORARIO != value))
				{
					this.OnCOSTOHONORARIOChanging(value);
					this.SendPropertyChanging();
					this._COSTOHONORARIO = value;
					this.SendPropertyChanged("COSTOHONORARIO");
					this.OnCOSTOHONORARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COSTOEQUIPO", DbType="Decimal(7,2) NOT NULL")]
		public decimal COSTOEQUIPO
		{
			get
			{
				return this._COSTOEQUIPO;
			}
			set
			{
				if ((this._COSTOEQUIPO != value))
				{
					this.OnCOSTOEQUIPOChanging(value);
					this.SendPropertyChanging();
					this._COSTOEQUIPO = value;
					this.SendPropertyChanged("COSTOEQUIPO");
					this.OnCOSTOEQUIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMENLABORATORIO_SOLICITUDEXAMEN", Storage="_SOLICITUDEXAMENs", ThisKey="IDEXAMEN,IDLABORATORIO", OtherKey="IDEXAMEN,IDLABORATORIO")]
		public EntitySet<SOLICITUDEXAMEN> SOLICITUDEXAMENs
		{
			get
			{
				return this._SOLICITUDEXAMENs;
			}
			set
			{
				this._SOLICITUDEXAMENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_EXAMENLABORATORIO", Storage="_LABORATORIO", ThisKey="IDLABORATORIO", OtherKey="IDLABORATORIO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LABORATORIO LABORATORIO
		{
			get
			{
				return this._LABORATORIO.Entity;
			}
			set
			{
				LABORATORIO previousValue = this._LABORATORIO.Entity;
				if (((previousValue != value) 
							|| (this._LABORATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LABORATORIO.Entity = null;
						previousValue.EXAMENLABORATORIOs.Remove(this);
					}
					this._LABORATORIO.Entity = value;
					if ((value != null))
					{
						value.EXAMENLABORATORIOs.Add(this);
						this._IDLABORATORIO = value.IDLABORATORIO;
					}
					else
					{
						this._IDLABORATORIO = default(decimal);
					}
					this.SendPropertyChanged("LABORATORIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMEN_EXAMENLABORATORIO", Storage="_EXAMEN", ThisKey="IDEXAMEN", OtherKey="IDEXAMEN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EXAMEN EXAMEN
		{
			get
			{
				return this._EXAMEN.Entity;
			}
			set
			{
				EXAMEN previousValue = this._EXAMEN.Entity;
				if (((previousValue != value) 
							|| (this._EXAMEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EXAMEN.Entity = null;
						previousValue.EXAMENLABORATORIOs.Remove(this);
					}
					this._EXAMEN.Entity = value;
					if ((value != null))
					{
						value.EXAMENLABORATORIOs.Add(this);
						this._IDEXAMEN = value.IDEXAMEN;
					}
					else
					{
						this._IDEXAMEN = default(decimal);
					}
					this.SendPropertyChanged("EXAMEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.EXAMENLABORATORIO = this;
		}
		
		private void detach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.EXAMENLABORATORIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="LABORATORIO.EXAMEN")]
	public partial class EXAMEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDEXAMEN;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<ITEM> _ITEMs;
		
		private EntitySet<EXAMENLABORATORIO> _EXAMENLABORATORIOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEXAMENChanging(decimal value);
    partial void OnIDEXAMENChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public EXAMEN()
		{
			this._ITEMs = new EntitySet<ITEM>(new Action<ITEM>(this.attach_ITEMs), new Action<ITEM>(this.detach_ITEMs));
			this._EXAMENLABORATORIOs = new EntitySet<EXAMENLABORATORIO>(new Action<EXAMENLABORATORIO>(this.attach_EXAMENLABORATORIOs), new Action<EXAMENLABORATORIO>(this.detach_EXAMENLABORATORIOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEXAMEN", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDEXAMEN
		{
			get
			{
				return this._IDEXAMEN;
			}
			set
			{
				if ((this._IDEXAMEN != value))
				{
					this.OnIDEXAMENChanging(value);
					this.SendPropertyChanging();
					this._IDEXAMEN = value;
					this.SendPropertyChanged("IDEXAMEN");
					this.OnIDEXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMEN_ITEM", Storage="_ITEMs", ThisKey="IDEXAMEN", OtherKey="IDEXAMEN")]
		public EntitySet<ITEM> ITEMs
		{
			get
			{
				return this._ITEMs;
			}
			set
			{
				this._ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMEN_EXAMENLABORATORIO", Storage="_EXAMENLABORATORIOs", ThisKey="IDEXAMEN", OtherKey="IDEXAMEN")]
		public EntitySet<EXAMENLABORATORIO> EXAMENLABORATORIOs
		{
			get
			{
				return this._EXAMENLABORATORIOs;
			}
			set
			{
				this._EXAMENLABORATORIOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ITEMs(ITEM entity)
		{
			this.SendPropertyChanging();
			entity.EXAMEN = this;
		}
		
		private void detach_ITEMs(ITEM entity)
		{
			this.SendPropertyChanging();
			entity.EXAMEN = null;
		}
		
		private void attach_EXAMENLABORATORIOs(EXAMENLABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.EXAMEN = this;
		}
		
		private void detach_EXAMENLABORATORIOs(EXAMENLABORATORIO entity)
		{
			this.SendPropertyChanging();
			entity.EXAMEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FARMACIA.MEDICAMENTOFARMACIA")]
	public partial class MEDICAMENTOFARMACIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDMEDICAMENTO;
		
		private decimal _IDFARMACIA;
		
		private decimal _IDSEDE;
		
		private decimal _PRECIO;
		
		private EntitySet<LINEARECETA> _LINEARECETAs;
		
		private EntityRef<MEDICAMENTO> _MEDICAMENTO;
		
		private EntityRef<FARMACIA> _FARMACIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMEDICAMENTOChanging(decimal value);
    partial void OnIDMEDICAMENTOChanged();
    partial void OnIDFARMACIAChanging(decimal value);
    partial void OnIDFARMACIAChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    partial void OnPRECIOChanging(decimal value);
    partial void OnPRECIOChanged();
    #endregion
		
		public MEDICAMENTOFARMACIA()
		{
			this._LINEARECETAs = new EntitySet<LINEARECETA>(new Action<LINEARECETA>(this.attach_LINEARECETAs), new Action<LINEARECETA>(this.detach_LINEARECETAs));
			this._MEDICAMENTO = default(EntityRef<MEDICAMENTO>);
			this._FARMACIA = default(EntityRef<FARMACIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMEDICAMENTO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDMEDICAMENTO
		{
			get
			{
				return this._IDMEDICAMENTO;
			}
			set
			{
				if ((this._IDMEDICAMENTO != value))
				{
					if (this._MEDICAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._IDMEDICAMENTO = value;
					this.SendPropertyChanged("IDMEDICAMENTO");
					this.OnIDMEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFARMACIA", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDFARMACIA
		{
			get
			{
				return this._IDFARMACIA;
			}
			set
			{
				if ((this._IDFARMACIA != value))
				{
					if (this._FARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFARMACIAChanging(value);
					this.SendPropertyChanging();
					this._IDFARMACIA = value;
					this.SendPropertyChanged("IDFARMACIA");
					this.OnIDFARMACIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._FARMACIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Decimal(7,2) NOT NULL")]
		public decimal PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTOFARMACIA_LINEARECETA", Storage="_LINEARECETAs", ThisKey="IDMEDICAMENTO,IDFARMACIA,IDSEDE", OtherKey="IDMEDICAMENTO,IDFARMACIA,IDSEDE")]
		public EntitySet<LINEARECETA> LINEARECETAs
		{
			get
			{
				return this._LINEARECETAs;
			}
			set
			{
				this._LINEARECETAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_MEDICAMENTOFARMACIA", Storage="_MEDICAMENTO", ThisKey="IDMEDICAMENTO", OtherKey="IDMEDICAMENTO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEDICAMENTO MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO.Entity;
			}
			set
			{
				MEDICAMENTO previousValue = this._MEDICAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTO.Entity = null;
						previousValue.MEDICAMENTOFARMACIAs.Remove(this);
					}
					this._MEDICAMENTO.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTOFARMACIAs.Add(this);
						this._IDMEDICAMENTO = value.IDMEDICAMENTO;
					}
					else
					{
						this._IDMEDICAMENTO = default(decimal);
					}
					this.SendPropertyChanged("MEDICAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FARMACIA_MEDICAMENTOFARMACIA", Storage="_FARMACIA", ThisKey="IDFARMACIA,IDSEDE", OtherKey="IDFARMACIA,IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FARMACIA FARMACIA
		{
			get
			{
				return this._FARMACIA.Entity;
			}
			set
			{
				FARMACIA previousValue = this._FARMACIA.Entity;
				if (((previousValue != value) 
							|| (this._FARMACIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FARMACIA.Entity = null;
						previousValue.MEDICAMENTOFARMACIAs.Remove(this);
					}
					this._FARMACIA.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTOFARMACIAs.Add(this);
						this._IDFARMACIA = value.IDFARMACIA;
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDFARMACIA = default(decimal);
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("FARMACIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINEARECETAs(LINEARECETA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTOFARMACIA = this;
		}
		
		private void detach_LINEARECETAs(LINEARECETA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTOFARMACIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FARMACIA.MEDICAMENTO")]
	public partial class MEDICAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDMEDICAMENTO;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<MEDICAMENTOFARMACIA> _MEDICAMENTOFARMACIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMEDICAMENTOChanging(decimal value);
    partial void OnIDMEDICAMENTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public MEDICAMENTO()
		{
			this._MEDICAMENTOFARMACIAs = new EntitySet<MEDICAMENTOFARMACIA>(new Action<MEDICAMENTOFARMACIA>(this.attach_MEDICAMENTOFARMACIAs), new Action<MEDICAMENTOFARMACIA>(this.detach_MEDICAMENTOFARMACIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMEDICAMENTO", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDMEDICAMENTO
		{
			get
			{
				return this._IDMEDICAMENTO;
			}
			set
			{
				if ((this._IDMEDICAMENTO != value))
				{
					this.OnIDMEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._IDMEDICAMENTO = value;
					this.SendPropertyChanged("IDMEDICAMENTO");
					this.OnIDMEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_MEDICAMENTOFARMACIA", Storage="_MEDICAMENTOFARMACIAs", ThisKey="IDMEDICAMENTO", OtherKey="IDMEDICAMENTO")]
		public EntitySet<MEDICAMENTOFARMACIA> MEDICAMENTOFARMACIAs
		{
			get
			{
				return this._MEDICAMENTOFARMACIAs;
			}
			set
			{
				this._MEDICAMENTOFARMACIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTOFARMACIAs(MEDICAMENTOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = this;
		}
		
		private void detach_MEDICAMENTOFARMACIAs(MEDICAMENTOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FARMACIA.FARMACIA")]
	public partial class FARMACIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDFARMACIA;
		
		private decimal _IDSEDE;
		
		private EntitySet<ENCARGADOFARMACIA> _ENCARGADOFARMACIAs;
		
		private EntitySet<MEDICAMENTOFARMACIA> _MEDICAMENTOFARMACIAs;
		
		private EntityRef<SEDE> _SEDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFARMACIAChanging(decimal value);
    partial void OnIDFARMACIAChanged();
    partial void OnIDSEDEChanging(decimal value);
    partial void OnIDSEDEChanged();
    #endregion
		
		public FARMACIA()
		{
			this._ENCARGADOFARMACIAs = new EntitySet<ENCARGADOFARMACIA>(new Action<ENCARGADOFARMACIA>(this.attach_ENCARGADOFARMACIAs), new Action<ENCARGADOFARMACIA>(this.detach_ENCARGADOFARMACIAs));
			this._MEDICAMENTOFARMACIAs = new EntitySet<MEDICAMENTOFARMACIA>(new Action<MEDICAMENTOFARMACIA>(this.attach_MEDICAMENTOFARMACIAs), new Action<MEDICAMENTOFARMACIA>(this.detach_MEDICAMENTOFARMACIAs));
			this._SEDE = default(EntityRef<SEDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFARMACIA", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDFARMACIA
		{
			get
			{
				return this._IDFARMACIA;
			}
			set
			{
				if ((this._IDFARMACIA != value))
				{
					this.OnIDFARMACIAChanging(value);
					this.SendPropertyChanging();
					this._IDFARMACIA = value;
					this.SendPropertyChanged("IDFARMACIA");
					this.OnIDFARMACIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					if (this._SEDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEDEChanging(value);
					this.SendPropertyChanging();
					this._IDSEDE = value;
					this.SendPropertyChanged("IDSEDE");
					this.OnIDSEDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FARMACIA_ENCARGADOFARMACIA", Storage="_ENCARGADOFARMACIAs", ThisKey="IDFARMACIA,IDSEDE", OtherKey="IDFARMACIA,IDSEDE")]
		public EntitySet<ENCARGADOFARMACIA> ENCARGADOFARMACIAs
		{
			get
			{
				return this._ENCARGADOFARMACIAs;
			}
			set
			{
				this._ENCARGADOFARMACIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FARMACIA_MEDICAMENTOFARMACIA", Storage="_MEDICAMENTOFARMACIAs", ThisKey="IDFARMACIA,IDSEDE", OtherKey="IDFARMACIA,IDSEDE")]
		public EntitySet<MEDICAMENTOFARMACIA> MEDICAMENTOFARMACIAs
		{
			get
			{
				return this._MEDICAMENTOFARMACIAs;
			}
			set
			{
				this._MEDICAMENTOFARMACIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEDE_FARMACIA", Storage="_SEDE", ThisKey="IDSEDE", OtherKey="IDSEDE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SEDE SEDE
		{
			get
			{
				return this._SEDE.Entity;
			}
			set
			{
				SEDE previousValue = this._SEDE.Entity;
				if (((previousValue != value) 
							|| (this._SEDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEDE.Entity = null;
						previousValue.FARMACIAs.Remove(this);
					}
					this._SEDE.Entity = value;
					if ((value != null))
					{
						value.FARMACIAs.Add(this);
						this._IDSEDE = value.IDSEDE;
					}
					else
					{
						this._IDSEDE = default(decimal);
					}
					this.SendPropertyChanged("SEDE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ENCARGADOFARMACIAs(ENCARGADOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.FARMACIA = this;
		}
		
		private void detach_ENCARGADOFARMACIAs(ENCARGADOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.FARMACIA = null;
		}
		
		private void attach_MEDICAMENTOFARMACIAs(MEDICAMENTOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.FARMACIA = this;
		}
		
		private void detach_MEDICAMENTOFARMACIAs(MEDICAMENTOFARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.FARMACIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FACTURA.FACTURA")]
	public partial class FACTURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDFACTURA;
		
		private System.DateTime _FECHAFACTURA;
		
		private string _CEDULAPACIENTE;
		
		private EntitySet<CITA> _CITAs;
		
		private EntitySet<RECETA> _RECETAs;
		
		private EntitySet<SOLICITUDEXAMEN> _SOLICITUDEXAMENs;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFACTURAChanging(decimal value);
    partial void OnIDFACTURAChanged();
    partial void OnFECHAFACTURAChanging(System.DateTime value);
    partial void OnFECHAFACTURAChanged();
    partial void OnCEDULAPACIENTEChanging(string value);
    partial void OnCEDULAPACIENTEChanged();
    #endregion
		
		public FACTURA()
		{
			this._CITAs = new EntitySet<CITA>(new Action<CITA>(this.attach_CITAs), new Action<CITA>(this.detach_CITAs));
			this._RECETAs = new EntitySet<RECETA>(new Action<RECETA>(this.attach_RECETAs), new Action<RECETA>(this.detach_RECETAs));
			this._SOLICITUDEXAMENs = new EntitySet<SOLICITUDEXAMEN>(new Action<SOLICITUDEXAMEN>(this.attach_SOLICITUDEXAMENs), new Action<SOLICITUDEXAMEN>(this.detach_SOLICITUDEXAMENs));
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFACTURA", DbType="Decimal(20,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDFACTURA
		{
			get
			{
				return this._IDFACTURA;
			}
			set
			{
				if ((this._IDFACTURA != value))
				{
					this.OnIDFACTURAChanging(value);
					this.SendPropertyChanging();
					this._IDFACTURA = value;
					this.SendPropertyChanged("IDFACTURA");
					this.OnIDFACTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAFACTURA", DbType="Date NOT NULL")]
		public System.DateTime FECHAFACTURA
		{
			get
			{
				return this._FECHAFACTURA;
			}
			set
			{
				if ((this._FECHAFACTURA != value))
				{
					this.OnFECHAFACTURAChanging(value);
					this.SendPropertyChanging();
					this._FECHAFACTURA = value;
					this.SendPropertyChanged("FECHAFACTURA");
					this.OnFECHAFACTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPACIENTE", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CEDULAPACIENTE
		{
			get
			{
				return this._CEDULAPACIENTE;
			}
			set
			{
				if ((this._CEDULAPACIENTE != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEDULAPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPACIENTE = value;
					this.SendPropertyChanged("CEDULAPACIENTE");
					this.OnCEDULAPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_CITA", Storage="_CITAs", ThisKey="IDFACTURA", OtherKey="IDFACTURA")]
		public EntitySet<CITA> CITAs
		{
			get
			{
				return this._CITAs;
			}
			set
			{
				this._CITAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_RECETA", Storage="_RECETAs", ThisKey="IDFACTURA", OtherKey="IDFACTURA")]
		public EntitySet<RECETA> RECETAs
		{
			get
			{
				return this._RECETAs;
			}
			set
			{
				this._RECETAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_SOLICITUDEXAMEN", Storage="_SOLICITUDEXAMENs", ThisKey="IDFACTURA", OtherKey="IDFACTURA")]
		public EntitySet<SOLICITUDEXAMEN> SOLICITUDEXAMENs
		{
			get
			{
				return this._SOLICITUDEXAMENs;
			}
			set
			{
				this._SOLICITUDEXAMENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_FACTURA", Storage="_PACIENTE", ThisKey="CEDULAPACIENTE", OtherKey="CEDULA", IsForeignKey=true)]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._CEDULAPACIENTE = value.CEDULA;
					}
					else
					{
						this._CEDULAPACIENTE = default(string);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = this;
		}
		
		private void detach_CITAs(CITA entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = null;
		}
		
		private void attach_RECETAs(RECETA entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = this;
		}
		
		private void detach_RECETAs(RECETA entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = null;
		}
		
		private void attach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = this;
		}
		
		private void detach_SOLICITUDEXAMENs(SOLICITUDEXAMEN entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EMPLEADO.PUESTO")]
	public partial class PUESTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDPUESTO;
		
		private string _NOMBRE;
		
		private string _DESRIPCION;
		
		private EntitySet<EMPLEADO> _EMPLEADOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPUESTOChanging(decimal value);
    partial void OnIDPUESTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESRIPCIONChanging(string value);
    partial void OnDESRIPCIONChanged();
    #endregion
		
		public PUESTO()
		{
			this._EMPLEADOs = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADOs), new Action<EMPLEADO>(this.detach_EMPLEADOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPUESTO", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal IDPUESTO
		{
			get
			{
				return this._IDPUESTO;
			}
			set
			{
				if ((this._IDPUESTO != value))
				{
					this.OnIDPUESTOChanging(value);
					this.SendPropertyChanging();
					this._IDPUESTO = value;
					this.SendPropertyChanged("IDPUESTO");
					this.OnIDPUESTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESRIPCION", DbType="VarChar(40)")]
		public string DESRIPCION
		{
			get
			{
				return this._DESRIPCION;
			}
			set
			{
				if ((this._DESRIPCION != value))
				{
					this.OnDESRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESRIPCION = value;
					this.SendPropertyChanged("DESRIPCION");
					this.OnDESRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUESTO_EMPLEADO", Storage="_EMPLEADOs", ThisKey="IDPUESTO", OtherKey="IDPUESTO")]
		public EntitySet<EMPLEADO> EMPLEADOs
		{
			get
			{
				return this._EMPLEADOs;
			}
			set
			{
				this._EMPLEADOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADOs(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.PUESTO = this;
		}
		
		private void detach_EMPLEADOs(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.PUESTO = null;
		}
	}
	
	public partial class obtenerCedulaNombrePacientesResult
	{
		
		private string _CEDULA;
		
		private string _APELLIDO;
		
		private string _NOMBRE;
		
		public obtenerCedulaNombrePacientesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULA", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CEDULA
		{
			get
			{
				return this._CEDULA;
			}
			set
			{
				if ((this._CEDULA != value))
				{
					this._CEDULA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string APELLIDO
		{
			get
			{
				return this._APELLIDO;
			}
			set
			{
				if ((this._APELLIDO != value))
				{
					this._APELLIDO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this._NOMBRE = value;
				}
			}
		}
	}
	
	public partial class obtenerMedicosEspecialiadResult
	{
		
		private string _APELLIDOS;
		
		private string _NOMBRE;
		
		private string _NOMBRE1;
		
		private decimal _IDEMPLEADO;
		
		private decimal _IDSEDE;
		
		public obtenerMedicosEspecialiadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOS", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string APELLIDOS
		{
			get
			{
				return this._APELLIDOS;
			}
			set
			{
				if ((this._APELLIDOS != value))
				{
					this._APELLIDOS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this._NOMBRE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE1", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NOMBRE1
		{
			get
			{
				return this._NOMBRE1;
			}
			set
			{
				if ((this._NOMBRE1 != value))
				{
					this._NOMBRE1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Decimal(9,0) NOT NULL")]
		public decimal IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					this._IDEMPLEADO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEDE", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDSEDE
		{
			get
			{
				return this._IDSEDE;
			}
			set
			{
				if ((this._IDSEDE != value))
				{
					this._IDSEDE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
